{"version":2,"kind":"Notebook","sha256":"3a874f00783c4d61cce8c8e5787177b5c792b84d396e973c36a42c13fb12ec20","slug":"notebooks.xbatcher-reconstruction","location":"/notebooks/xbatcher_reconstruction.ipynb","dependencies":[],"frontmatter":{"title":"Reconstructing Xarray Datasets from Model Outputs","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"cookbook-dev","language":"python"},"authors":[{"nameParsed":{"literal":"Keenan Ganz, Nabin Kalauni, and The Project Pythia Community","given":"and The Project Pythia Community","family":"Keenan Ganz","suffix":"Nabin Kalauni"},"name":"Keenan Ganz, Nabin Kalauni, and The Project Pythia Community","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/xbatcher-deep-learning","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/xbatcher-deep-learning/blob/main/notebooks/xbatcher_reconstruction.ipynb","exports":[{"format":"ipynb","filename":"xbatcher_reconstruction.ipynb","url":"/xbatcher-deep-learning/build/xbatcher_reconstruct-6374e17767a427d00f0a9e29c24bf028.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This notebook addresses the process of reconstructing an ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Afylsu54VK"},{"type":"inlineCode","value":"xarray.DataArray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cBuXVfzeyS"},{"type":"text","value":" from the output of a machine learning model. While the previous notebook focused on generating batches from ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LcYZXH8gpB"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JJPOF7omh2"},{"type":"text","value":" objects, this guide details the reverse process: assembling model outputs back into a coherent, labeled ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hecUxDfn5J"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H5Bm2UsyRQ"},{"type":"text","value":" object. This is a common requirement in scientific machine learning workflows, where the model output needs to be analyzed in its original spatial or temporal context.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IYxtUUxFd2"}],"key":"JZ7UJtnOoT"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We will examine a function that reassembles model outputs, including a detailed look at how an internal API of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"y7DOz5oMHL"},{"type":"inlineCode","value":"xbatcher","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TpNS80EcjQ"},{"type":"text","value":" can be used to map batch outputs back to their original coordinates.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"J1iq7cfQNd"}],"key":"YRkdG4sqYc"}],"key":"sNIRVMtvQX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xMWc9NdNIF"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"Wtyv2jXFa8"}],"key":"f4nysgnRaW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport numpy as np\nimport torch\nimport xbatcher\nfrom xbatcher.loaders.torch import MapDataset\nfrom typing import Literal\n\nfrom dummy_models import ExpandAlongAxis","key":"dSpFuiDZNW"},{"type":"output","id":"khOlxSKlEvb9s_t_7-TBN","data":[],"key":"O2Xn43eg4H"}],"key":"OKerhTxquI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Setup: Data, Batches, and a Dummy Model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iwVqO4uO2N"}],"identifier":"setup-data-batches-and-a-dummy-model","label":"Setup: Data, Batches, and a Dummy Model","html_id":"setup-data-batches-and-a-dummy-model","implicit":true,"key":"IT5TN7Ubh6"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We will begin by creating a sample ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jRQu01rcOI"},{"type":"inlineCode","value":"xarray.DataArray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LF8lGBA43Q"},{"type":"text","value":" and a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YwIYMQxPeW"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Hgz78FG1O0"},{"type":"text","value":". We will also instantiate a dummy model that transforms the data, simulating a common machine learning scenario where the output dimensions differ from the input dimensions (e.g., super-resolution).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KnBoFu5q8N"}],"key":"CSpaTlonLh"}],"key":"ZhPevxykwV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"da = xr.DataArray(\n    data=np.random.rand(50, 40).astype(np.float32),\n    dims=(\"x\", \"y\"),\n    coords={\"x\": np.arange(50), \"y\": np.arange(40)},\n)\nda","key":"OskOmduAqV"},{"type":"output","id":"jdnlARW4-vbBJKWmushgo","data":[{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/plain":{"content":"<xarray.DataArray (x: 50, y: 40)> Size: 8kB\narray([[0.513602  , 0.8105346 , 0.10090113, ..., 0.2879384 , 0.60543054,\n        0.41588315],\n       [0.2875835 , 0.8071126 , 0.9094737 , ..., 0.36999226, 0.8187939 ,\n        0.48365587],\n       [0.13513297, 0.25934806, 0.6085453 , ..., 0.29439437, 0.2850923 ,\n        0.04560952],\n       ...,\n       [0.3805699 , 0.03880321, 0.30095696, ..., 0.35895607, 0.9745663 ,\n        0.4428386 ],\n       [0.00978132, 0.44947368, 0.18137038, ..., 0.33923343, 0.97051096,\n        0.93870884],\n       [0.6891806 , 0.8208779 , 0.23057786, ..., 0.87361133, 0.03439195,\n        0.32796276]], shape=(50, 40), dtype=float32)\nCoordinates:\n  * x        (x) int64 400B 0 1 2 3 4 5 6 7 8 9 ... 41 42 43 44 45 46 47 48 49\n  * y        (y) int64 320B 0 1 2 3 4 5 6 7 8 9 ... 31 32 33 34 35 36 37 38 39","content_type":"text/plain"},"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base rgba(0, 0, 0, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, white)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 15))\n  );\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base, rgba(255, 255, 255, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, #111111)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 15))\n  );\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n  border: 2px solid transparent !important;\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0) !important;\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  border-color: var(--xr-background-color-row-odd);\n  margin-bottom: 0;\n  padding-top: 2px;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n  border-color: var(--xr-background-color-row-even);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  border-top: 2px dotted var(--xr-background-color);\n  padding-bottom: 20px !important;\n  padding-top: 10px !important;\n}\n\n.xr-var-attrs-in + label,\n.xr-var-data-in + label,\n.xr-index-data-in + label {\n  padding: 0 1px;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-data > pre,\n.xr-index-data > pre,\n.xr-var-data > table > tbody > tr {\n  background-color: transparent !important;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n\n.xr-var-attrs-in:checked + label > .xr-icon-file-text2,\n.xr-var-data-in:checked + label > .xr-icon-database,\n.xr-index-data-in:checked + label > .xr-icon-database {\n  color: var(--xr-font-color0);\n  filter: drop-shadow(1px 1px 5px var(--xr-font-color2));\n  stroke-width: 0.8px;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (x: 50, y: 40)&gt; Size: 8kB\narray([[0.513602  , 0.8105346 , 0.10090113, ..., 0.2879384 , 0.60543054,\n        0.41588315],\n       [0.2875835 , 0.8071126 , 0.9094737 , ..., 0.36999226, 0.8187939 ,\n        0.48365587],\n       [0.13513297, 0.25934806, 0.6085453 , ..., 0.29439437, 0.2850923 ,\n        0.04560952],\n       ...,\n       [0.3805699 , 0.03880321, 0.30095696, ..., 0.35895607, 0.9745663 ,\n        0.4428386 ],\n       [0.00978132, 0.44947368, 0.18137038, ..., 0.33923343, 0.97051096,\n        0.93870884],\n       [0.6891806 , 0.8208779 , 0.23057786, ..., 0.87361133, 0.03439195,\n        0.32796276]], shape=(50, 40), dtype=float32)\nCoordinates:\n  * x        (x) int64 400B 0 1 2 3 4 5 6 7 8 9 ... 41 42 43 44 45 46 47 48 49\n  * y        (y) int64 320B 0 1 2 3 4 5 6 7 8 9 ... 31 32 33 34 35 36 37 38 39</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>x</span>: 50</li><li><span class='xr-has-index'>y</span>: 40</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-5701ce3c-a766-4962-9463-a10ff78bb826' class='xr-array-in' type='checkbox' checked><label for='section-5701ce3c-a766-4962-9463-a10ff78bb826' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.5136 0.8105 0.1009 0.5608 0.3092 ... 0.9808 0.8736 0.03439 0.328</span></div><div class='xr-array-data'><pre>array([[0.513602  , 0.8105346 , 0.10090113, ..., 0.2879384 , 0.60543054,\n        0.41588315],\n       [0.2875835 , 0.8071126 , 0.9094737 , ..., 0.36999226, 0.8187939 ,\n        0.48365587],\n       [0.13513297, 0.25934806, 0.6085453 , ..., 0.29439437, 0.2850923 ,\n        0.04560952],\n       ...,\n       [0.3805699 , 0.03880321, 0.30095696, ..., 0.35895607, 0.9745663 ,\n        0.4428386 ],\n       [0.00978132, 0.44947368, 0.18137038, ..., 0.33923343, 0.97051096,\n        0.93870884],\n       [0.6891806 , 0.8208779 , 0.23057786, ..., 0.87361133, 0.03439195,\n        0.32796276]], shape=(50, 40), dtype=float32)</pre></div></div></li><li class='xr-section-item'><input id='section-b66d4808-c39c-4561-b5e1-17418f58c734' class='xr-section-summary-in' type='checkbox'  checked><label for='section-b66d4808-c39c-4561-b5e1-17418f58c734' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 5 6 ... 44 45 46 47 48 49</div><input id='attrs-3eacb743-6187-4873-924b-6210673e517d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-3eacb743-6187-4873-924b-6210673e517d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-43f8191e-c067-4aaf-8b9d-d9931961f5bf' class='xr-var-data-in' type='checkbox'><label for='data-43f8191e-c067-4aaf-8b9d-d9931961f5bf' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 5 6 ... 34 35 36 37 38 39</div><input id='attrs-0c39ffa1-fb55-4ade-a350-d9d902c43986' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0c39ffa1-fb55-4ade-a350-d9d902c43986' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f1837aa3-a69e-4360-81b3-74a19b641ff7' class='xr-var-data-in' type='checkbox'><label for='data-f1837aa3-a69e-4360-81b3-74a19b641ff7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-67cc7a3d-abac-4bed-99b3-56063f3c2cc8' class='xr-section-summary-in' type='checkbox'  ><label for='section-67cc7a3d-abac-4bed-99b3-56063f3c2cc8' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-1fce0b19-64e3-4410-a981-ca148b6463e5' class='xr-index-data-in' type='checkbox'/><label for='index-1fce0b19-64e3-4410-a981-ca148b6463e5' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49],\n      dtype=&#x27;int64&#x27;, name=&#x27;x&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-a7f018cd-6a60-4899-9c93-e252c39c089d' class='xr-index-data-in' type='checkbox'/><label for='index-a7f018cd-6a60-4899-9c93-e252c39c089d' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39],\n      dtype=&#x27;int64&#x27;, name=&#x27;y&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-8f2cdfc9-5748-4640-bbe1-39ed87c0c782' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-8f2cdfc9-5748-4640-bbe1-39ed87c0c782' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>","content_type":"text/html"}}}],"key":"P5A9kLeWw7"}],"key":"UeYkagQos1"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Next, we create the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fFPdbS1PZ2"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iDRqbFY7Mp"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"og2fXbAH1R"}],"key":"yjxPSTkhlH"}],"key":"vZSehdIAcy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bgen = xbatcher.BatchGenerator(da, input_dims={\"x\": 10, \"y\": 10})","key":"Ct15qQyDEF"},{"type":"output","id":"vKcvkydeWG5e4kxrkNzOK","data":[],"key":"Ea5DVwWwxe"}],"key":"AAjYjq8B2a"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For the model, we will use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UGlclPcikC"},{"type":"inlineCode","value":"ExpandAlongAxis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"me1dN9oN0A"},{"type":"text","value":" from ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jBmrki2dch"},{"type":"inlineCode","value":"dummy_models.py","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"byjCjNgn1P"},{"type":"text","value":". This model upsamples the input along a specified axis, changing the dimensions of the data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AaxzrikYOB"}],"key":"vjCgsV1GBU"}],"key":"Xh3iMbCEVc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# The model will expand the 'x' dimension by a factor of 2\nmodel = ExpandAlongAxis(ax=1, n_repeats=2)","key":"RHEG1J8KtF"},{"type":"output","id":"uirrhfhMCo7Ib8rib40Ym","data":[],"key":"nKkWwwwxDQ"}],"key":"yUNcpklTbd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iTsQkQo7ad"},{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jOUeLZE2Bd"},{"type":"text","value":" Function","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QSfJms7YhD"}],"identifier":"the-predict-on-array-function","label":"The predict_on_array Function","html_id":"the-predict-on-array-function","implicit":true,"key":"DTTJvleqZC"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wZdG890iuN"},{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vRrrvOexu6"},{"type":"text","value":" function (from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fHWO1WKGbo"},{"type":"inlineCode","value":"functions.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"k2M3dmGuMD"},{"type":"text","value":") is designed to take batches from a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ru1L14d2LI"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"H6X3M8EuFz"},{"type":"text","value":", pass them through a model, and reassemble the outputs. The following sections will break down this function and its helpers.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xMVjUFgpvO"}],"key":"x4NORKwsqZ"}],"key":"exUx8TDW5B"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _get_resample_factor(\n    bgen: xbatcher.BatchGenerator,\n    output_tensor_dim: dict[str, int],\n    resample_dim: list[str]\n):\n    resample_factor = {}\n    for dim in resample_dim:\n        r = output_tensor_dim[dim] / bgen.input_dims[dim]\n        is_int = (r == int(r))\n        is_inv_int = (1/r == int(1/r)) if r != 0 else False\n        assert is_int or is_inv_int, f\"Resample ratio for dim '{dim}' must be an integer or its inverse.\"\n        resample_factor[dim] = r\n\n    return resample_factor","key":"QdDHtx59p6"},{"type":"output","id":"YZcLTxl1JOs06Xc_Kb-Ts","data":[],"key":"GlDLKGUacS"}],"key":"K3hBJsTfWY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_get_resample_factor","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TAE0S38Be8"}],"identifier":"id-get-resample-factor","label":"_get_resample_factor","html_id":"id-get-resample-factor","implicit":true,"key":"Lud2zTBHNo"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This helper function calculates the resampling factor for each dimension. For example, if input batches have ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HEoLyAlR9B"},{"type":"inlineCode","value":"x=10","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"v8nh6vpSPt"},{"type":"text","value":" and the model outputs tensors with ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Wiu3YdFKJD"},{"type":"inlineCode","value":"x=20","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"J29tUftIBg"},{"type":"text","value":", the resampling factor for ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Queezp1zPa"},{"type":"inlineCode","value":"x","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QyHGGNhDZy"},{"type":"text","value":" is 2. This is used to determine the dimensions of the final reconstructed array.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xTjYasW12u"}],"key":"N3h7dOyZlD"}],"key":"P7kyESeQEk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _get_output_array_size(\n    bgen: xbatcher.BatchGenerator,\n    output_tensor_dim: dict[str, int],\n    new_dim: list[str],\n    core_dim: list[str],\n    resample_dim: list[str]\n):\n    resample_factor = _get_resample_factor(bgen, output_tensor_dim, resample_dim)\n    output_size = {}\n    for key, size in output_tensor_dim.items():\n        if key in new_dim:\n            output_size[key] = output_tensor_dim[key]\n        elif key in core_dim:\n            if output_tensor_dim[key] != bgen.ds.sizes[key]:\n                raise ValueError(\n                    f\"Axis {key} is a core dim, but the tensor size\"\n                    f\"({output_tensor_dim[key]}) does not equal the \"\n                    f\"source data array size ({bgen.ds.sizes[key]}).\"\n                )\n            output_size[key] = bgen.ds.sizes[key]\n        elif key in resample_dim:\n            temp_output_size = bgen.ds.sizes[key] * resample_factor[key]\n            assert temp_output_size.is_integer(), f\"Resampling for dim '{key}' results in non-integer size.\"\n            output_size[key] = int(temp_output_size)\n        else:\n            raise ValueError(f\"Axis {key} must be specified in one of new_dim, core_dim, or resample_dim\") \n    return output_size","key":"rsCRsJAuFE"},{"type":"output","id":"iwLq39LqLlVTyb4nNU8RQ","data":[],"key":"uU6mzHgO4P"}],"key":"ur2xce3Wmr"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_get_output_array_size","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TFCauBPN0N"}],"identifier":"id-get-output-array-size","label":"_get_output_array_size","html_id":"id-get-output-array-size","implicit":true,"key":"jhxo7HLn8j"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This function determines the final size of the reconstructed array. It uses the resampling factor and also considers ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aB7VKMmqXQ"},{"type":"inlineCode","value":"new_dim","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KnGl90km4g"},{"type":"text","value":" (dimensions that are new in the output) and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KO2rghUIrI"},{"type":"inlineCode","value":"core_dim","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tdmNow4H8L"},{"type":"text","value":" (dimensions that are not batched over and remain unchanged).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bNt8LRa0Cd"}],"key":"Gx6jRPXTAH"}],"key":"xOkgizZlAD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _resample_coordinate(\n    coord: xr.DataArray,\n    factor: float,\n    mode: Literal[\"centers\", \"edges\"]=\"edges\"\n) -> np.ndarray:\n    assert len(coord.shape) == 1 and coord.shape[0] > 1\n    assert (coord.shape[0] * factor).is_integer()\n    old_step = (coord.data[1] - coord.data[0])\n    offset = 0 if mode == \"edges\" else old_step / 2\n    new_step = old_step / factor\n    coord = coord - offset\n    new_coord_end = coord.max().item() + old_step\n    return np.arange(coord.min().item(), new_coord_end, step=new_step) + offset","key":"QHGh5AUBlR"},{"type":"output","id":"sJ8TUxLdVP4bZQzKZqzKj","data":[],"key":"kLW6FrJaL2"}],"key":"zkc4mRwFvE"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_resample_coordinate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TcwjC1ohwq"}],"identifier":"id-resample-coordinate","label":"_resample_coordinate","html_id":"id-resample-coordinate","implicit":true,"key":"KEGss5K26J"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If the size of a dimension is changed, its coordinates must also be updated. This function handles the resampling of coordinates.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cDE2Gn415L"}],"key":"fsdpBLu3yF"}],"key":"B2z9Qa2Jg2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _get_output_array_coordinates(\n    src_da: xr.DataArray,\n    output_array_dim: list[str],\n    resample_factor: dict[str, int],\n    resample_mode: Literal[\"centers\", \"edges\"]=\"edges\"\n) -> dict[str, np.ndarray]:\n    output_coords = {}\n    for dim in output_array_dim:\n        if dim in src_da.coords and dim in resample_factor:\n            output_coords[dim] = _resample_coordinate(src_da[dim], resample_factor[dim], resample_mode)\n        elif dim in src_da.coords:\n            output_coords[dim] = src_da[dim].copy(deep=True).data\n        else:\n            continue\n    return output_coords","key":"y3aFqE6Fqf"},{"type":"output","id":"w2qA4SOJX2tXkO5iulDny","data":[],"key":"KxYaNraZ87"}],"key":"L21b9Yx6S1"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_get_output_array_coordinates","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qexlhROOAi"}],"identifier":"id-get-output-array-coordinates","label":"_get_output_array_coordinates","html_id":"id-get-output-array-coordinates","implicit":true,"key":"okjJzTcpo9"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This function generates a dictionary of the new coordinates for the output array.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Oj1U0Dh30y"}],"key":"spPNcFxYPr"}],"key":"YLEVLytYPN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def predict_on_array(\n    dataset: MapDataset,\n    model: torch.nn.Module,\n    output_tensor_dim: dict[str, int],\n    new_dim: list[str],\n    core_dim: list[str],\n    resample_dim: list[str],\n    resample_mode: Literal[\"centers\", \"edges\"]=\"edges\",\n    batch_size: int=16\n) -> xr.DataArray:\n    s_new = set(new_dim)\n    s_core = set(core_dim)\n    s_resample = set(resample_dim)\n\n    if s_new & s_core or s_new & s_resample or s_core & s_resample:\n        raise ValueError(\"new_dim, core_dim, and resample_dim must be disjoint sets.\")\n\n    bgen = dataset.X_generator\n\n    resample_factor = _get_resample_factor(\n        bgen,\n        output_tensor_dim, \n        resample_dim\n    )\n    \n    output_size = _get_output_array_size(\n        bgen,\n        output_tensor_dim,\n        new_dim,\n        core_dim,\n        resample_dim\n    )\n            \n    output_da = xr.DataArray(\n        data=np.zeros(tuple(output_size.values())),\n        dims=tuple(output_size.keys()),\n    )\n    output_n = xr.full_like(output_da, 0)\n    \n    loader = torch.utils.data.DataLoader(dataset, batch_size=batch_size)\n\n    for i, batch in enumerate(loader):\n        input_tensor = batch[0] if isinstance(batch, (list, tuple)) else batch\n        out_batch = model(input_tensor).detach().numpy()\n\n        for ib in range(out_batch.shape[0]):\n            global_index = (i * batch_size) + ib\n            old_indexer = bgen._batch_selectors.selectors[global_index][0]\n            new_indexer = {}\n            for key in old_indexer:\n                if key in resample_dim:\n                    new_indexer[key] = slice(\n                        int(old_indexer[key].start * resample_factor[key]),\n                        int(old_indexer[key].stop * resample_factor[key])\n                    )\n\n            output_da.loc[new_indexer] += out_batch[ib, ...]\n            output_n.loc[new_indexer] += 1\n\n    output_da = output_da / output_n\n\n    output_da = output_da.assign_coords(\n        _get_output_array_coordinates(\n            dataset.X_generator.ds, \n            list(output_tensor_dim.keys()), \n            resample_factor, \n            resample_mode\n        )\n    )\n\n    return output_da","key":"qmKcDBflv5"},{"type":"output","id":"ZE5EgAzJQSZTIwrgXTBXZ","data":[],"key":"gEMFyPUWvO"}],"key":"pWGmCA3FXm"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"s1wnWnrgPN"},{"type":"text","value":" Internals","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a2UgPdQmI7"}],"identifier":"predict-on-array-internals","label":"predict_on_array Internals","html_id":"predict-on-array-internals","implicit":true,"key":"fUNgQYcex6"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The key steps of this function are as follows:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aE9Tjn0tow"}],"key":"DO2bCbeyjd"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Initialization","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YrpL7IGvMM"}],"key":"SYldXhYu6p"},{"type":"text","value":": An empty ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jL8wHwzgwm"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"RIo7hAuKYh"},{"type":"text","value":" (","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Y5h039kTXA"},{"type":"inlineCode","value":"output_da","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gEoAL49uCT"},{"type":"text","value":") is created with the final dimensions, along with a corresponding ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nSnLbZUa82"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"v3kDo4ux6v"},{"type":"text","value":" (","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ghFCqKWQed"},{"type":"inlineCode","value":"output_n","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"FSkB2cOAQ9"},{"type":"text","value":") to track the number of predictions for each element (for averaging in case of overlaps).","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VbVJFHPkst"}],"key":"xIeflW5dfJ"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Iteration","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"HLBBnzEoL4"}],"key":"zMzw31N6SU"},{"type":"text","value":": The function iterates through the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"kfKENINhD4"},{"type":"inlineCode","value":"DataLoader","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"uqZmiF2SDU"},{"type":"text","value":".","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"cCmsnWnuwG"}],"key":"miUoslTl3c"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The Internal API","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uvpzmyDBqP"}],"key":"DGhxqURcv3"},{"type":"text","value":": The core of the reconstruction is ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"UOIsJkEpT8"},{"type":"inlineCode","value":"bgen._batch_selectors.selectors[global_index]","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ZRU3LnW6Xb"},{"type":"text","value":". This internal attribute of the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"h9qf9aMqmM"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"mAmX0TncgB"},{"type":"text","value":" stores the slice objects for each batch, providing a map from the batch to the original ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"mmMajdvvGU"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xErBytxH7Y"},{"type":"text","value":"’s coordinate space.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"nYJH67PY8O"}],"key":"og0VaAOJr3"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Disclaimer","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"HdhDsHyKIF"}],"key":"MwFM2xrPXz"},{"type":"text","value":": Accessing internal attributes such as ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"sPR5JQisLQ"},{"type":"inlineCode","value":"_batch_selectors","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"TTRPQyBHTF"},{"type":"text","value":" is not part of the public API and may change in future versions of ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"MQfek92rIL"},{"type":"inlineCode","value":"xbatcher","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"vtO3jgUxs5"},{"type":"text","value":".","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"fLQYt47QbT"}],"key":"dYgPJEYOps"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Rescaling and Placing","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ySLy3Y30PK"}],"key":"cWuFINdaxV"},{"type":"text","value":": The resampling factor is used to scale the slices, and ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"kbDhlECYqC"},{"type":"inlineCode","value":".loc","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"gWrSItk9LD"},{"type":"text","value":" is used to place the model’s output into the correct location in ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"EYGKTT0Tal"},{"type":"inlineCode","value":"output_da","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"OEycQviyZv"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"EOetqh1JDT"}],"key":"xHZ7dGX0cT"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Averaging and Coordinates","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"s5gw2J7orT"}],"key":"iGvi8Wja3a"},{"type":"text","value":": Finally, the predictions are averaged (if there were overlaps) and the new coordinates are assigned.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"eD1dDuKdgM"}],"key":"KpotYnyvF3"}],"key":"KTWywB1MBo"}],"key":"JO7WRv9aBE"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reconstructing the Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ApTPHO4WrX"}],"identifier":"reconstructing-the-dataset","label":"Reconstructing the Dataset","html_id":"reconstructing-the-dataset","implicit":true,"key":"BSeMLfAakY"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We will now use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zF7kBcb953"},{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gGRRZ4lHxj"},{"type":"text","value":" function to reconstruct the dataset.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Qf24A3F6vt"}],"key":"bJZTrkw1xQ"}],"key":"BFtLGZ73Rt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"map_dataset = MapDataset(bgen)\nreconstructed_da = predict_on_array(\n    dataset=map_dataset,\n    model=model,\n    output_tensor_dim={\"x\": 20, \"y\": 10}, # The model doubles the x-dimension\n    new_dim=[],\n    core_dim=[],\n    resample_dim=[\"x\", \"y\"],\n    batch_size=4\n)\nreconstructed_da","key":"Q2r44YltUD"},{"type":"output","id":"mhZtQ7Ps7LEeSVuymfxat","data":[{"output_type":"execute_result","execution_count":10,"metadata":{},"data":{"text/plain":{"content":"<xarray.DataArray (x: 100, y: 40)> Size: 32kB\narray([[0.51360202, 0.8105346 , 0.10090113, ..., 0.28793839, 0.60543054,\n        0.41588315],\n       [0.51360202, 0.8105346 , 0.10090113, ..., 0.28793839, 0.60543054,\n        0.41588315],\n       [0.2875835 , 0.80711257, 0.90947372, ..., 0.36999226, 0.81879389,\n        0.48365587],\n       ...,\n       [0.00978132, 0.44947368, 0.18137038, ..., 0.33923343, 0.97051096,\n        0.93870884],\n       [0.68918061, 0.82087791, 0.23057786, ..., 0.87361133, 0.03439195,\n        0.32796276],\n       [0.68918061, 0.82087791, 0.23057786, ..., 0.87361133, 0.03439195,\n        0.32796276]], shape=(100, 40))\nCoordinates:\n  * x        (x) float64 800B 0.0 0.5 1.0 1.5 2.0 ... 47.5 48.0 48.5 49.0 49.5\n  * y        (y) float64 320B 0.0 1.0 2.0 3.0 4.0 ... 35.0 36.0 37.0 38.0 39.0","content_type":"text/plain"},"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base rgba(0, 0, 0, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, white)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 15))\n  );\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base, rgba(255, 255, 255, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, #111111)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 15))\n  );\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n  border: 2px solid transparent !important;\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0) !important;\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  border-color: var(--xr-background-color-row-odd);\n  margin-bottom: 0;\n  padding-top: 2px;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n  border-color: var(--xr-background-color-row-even);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  border-top: 2px dotted var(--xr-background-color);\n  padding-bottom: 20px !important;\n  padding-top: 10px !important;\n}\n\n.xr-var-attrs-in + label,\n.xr-var-data-in + label,\n.xr-index-data-in + label {\n  padding: 0 1px;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-data > pre,\n.xr-index-data > pre,\n.xr-var-data > table > tbody > tr {\n  background-color: transparent !important;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n\n.xr-var-attrs-in:checked + label > .xr-icon-file-text2,\n.xr-var-data-in:checked + label > .xr-icon-database,\n.xr-index-data-in:checked + label > .xr-icon-database {\n  color: var(--xr-font-color0);\n  filter: drop-shadow(1px 1px 5px var(--xr-font-color2));\n  stroke-width: 0.8px;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (x: 100, y: 40)&gt; Size: 32kB\narray([[0.51360202, 0.8105346 , 0.10090113, ..., 0.28793839, 0.60543054,\n        0.41588315],\n       [0.51360202, 0.8105346 , 0.10090113, ..., 0.28793839, 0.60543054,\n        0.41588315],\n       [0.2875835 , 0.80711257, 0.90947372, ..., 0.36999226, 0.81879389,\n        0.48365587],\n       ...,\n       [0.00978132, 0.44947368, 0.18137038, ..., 0.33923343, 0.97051096,\n        0.93870884],\n       [0.68918061, 0.82087791, 0.23057786, ..., 0.87361133, 0.03439195,\n        0.32796276],\n       [0.68918061, 0.82087791, 0.23057786, ..., 0.87361133, 0.03439195,\n        0.32796276]], shape=(100, 40))\nCoordinates:\n  * x        (x) float64 800B 0.0 0.5 1.0 1.5 2.0 ... 47.5 48.0 48.5 49.0 49.5\n  * y        (y) float64 320B 0.0 1.0 2.0 3.0 4.0 ... 35.0 36.0 37.0 38.0 39.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>x</span>: 100</li><li><span class='xr-has-index'>y</span>: 40</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-dc1ea02c-91fd-4fdc-b8b0-2c7ba47555ed' class='xr-array-in' type='checkbox' checked><label for='section-dc1ea02c-91fd-4fdc-b8b0-2c7ba47555ed' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.5136 0.8105 0.1009 0.5608 0.3092 ... 0.9808 0.8736 0.03439 0.328</span></div><div class='xr-array-data'><pre>array([[0.51360202, 0.8105346 , 0.10090113, ..., 0.28793839, 0.60543054,\n        0.41588315],\n       [0.51360202, 0.8105346 , 0.10090113, ..., 0.28793839, 0.60543054,\n        0.41588315],\n       [0.2875835 , 0.80711257, 0.90947372, ..., 0.36999226, 0.81879389,\n        0.48365587],\n       ...,\n       [0.00978132, 0.44947368, 0.18137038, ..., 0.33923343, 0.97051096,\n        0.93870884],\n       [0.68918061, 0.82087791, 0.23057786, ..., 0.87361133, 0.03439195,\n        0.32796276],\n       [0.68918061, 0.82087791, 0.23057786, ..., 0.87361133, 0.03439195,\n        0.32796276]], shape=(100, 40))</pre></div></div></li><li class='xr-section-item'><input id='section-f5583fda-993d-45ce-b8fd-bbc1200adc35' class='xr-section-summary-in' type='checkbox'  checked><label for='section-f5583fda-993d-45ce-b8fd-bbc1200adc35' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.5 1.0 1.5 ... 48.5 49.0 49.5</div><input id='attrs-383595aa-96cd-4b71-b98a-63b05a08331a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-383595aa-96cd-4b71-b98a-63b05a08331a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2859f524-d9c7-4377-9144-a18d15ae6369' class='xr-var-data-in' type='checkbox'><label for='data-2859f524-d9c7-4377-9144-a18d15ae6369' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0. ,  0.5,  1. ,  1.5,  2. ,  2.5,  3. ,  3.5,  4. ,  4.5,  5. ,  5.5,\n        6. ,  6.5,  7. ,  7.5,  8. ,  8.5,  9. ,  9.5, 10. , 10.5, 11. , 11.5,\n       12. , 12.5, 13. , 13.5, 14. , 14.5, 15. , 15.5, 16. , 16.5, 17. , 17.5,\n       18. , 18.5, 19. , 19.5, 20. , 20.5, 21. , 21.5, 22. , 22.5, 23. , 23.5,\n       24. , 24.5, 25. , 25.5, 26. , 26.5, 27. , 27.5, 28. , 28.5, 29. , 29.5,\n       30. , 30.5, 31. , 31.5, 32. , 32.5, 33. , 33.5, 34. , 34.5, 35. , 35.5,\n       36. , 36.5, 37. , 37.5, 38. , 38.5, 39. , 39.5, 40. , 40.5, 41. , 41.5,\n       42. , 42.5, 43. , 43.5, 44. , 44.5, 45. , 45.5, 46. , 46.5, 47. , 47.5,\n       48. , 48.5, 49. , 49.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 1.0 2.0 3.0 ... 37.0 38.0 39.0</div><input id='attrs-cd0da651-dfa0-480d-b5c4-123ed7717ec6' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-cd0da651-dfa0-480d-b5c4-123ed7717ec6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f927635d-d5ef-4717-8bd6-511ce7947be2' class='xr-var-data-in' type='checkbox'><label for='data-f927635d-d5ef-4717-8bd6-511ce7947be2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13.,\n       14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27.,\n       28., 29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39.])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-509b20fa-bf49-46e8-93cc-12de5b0df6ea' class='xr-section-summary-in' type='checkbox'  ><label for='section-509b20fa-bf49-46e8-93cc-12de5b0df6ea' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-739ddf11-0a76-4b9c-9864-861e0136f9e7' class='xr-index-data-in' type='checkbox'/><label for='index-739ddf11-0a76-4b9c-9864-861e0136f9e7' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0.0,  0.5,  1.0,  1.5,  2.0,  2.5,  3.0,  3.5,  4.0,  4.5,  5.0,  5.5,\n        6.0,  6.5,  7.0,  7.5,  8.0,  8.5,  9.0,  9.5, 10.0, 10.5, 11.0, 11.5,\n       12.0, 12.5, 13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5,\n       18.0, 18.5, 19.0, 19.5, 20.0, 20.5, 21.0, 21.5, 22.0, 22.5, 23.0, 23.5,\n       24.0, 24.5, 25.0, 25.5, 26.0, 26.5, 27.0, 27.5, 28.0, 28.5, 29.0, 29.5,\n       30.0, 30.5, 31.0, 31.5, 32.0, 32.5, 33.0, 33.5, 34.0, 34.5, 35.0, 35.5,\n       36.0, 36.5, 37.0, 37.5, 38.0, 38.5, 39.0, 39.5, 40.0, 40.5, 41.0, 41.5,\n       42.0, 42.5, 43.0, 43.5, 44.0, 44.5, 45.0, 45.5, 46.0, 46.5, 47.0, 47.5,\n       48.0, 48.5, 49.0, 49.5],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-e3419f91-dd74-4975-adea-1a9e2bf9b36c' class='xr-index-data-in' type='checkbox'/><label for='index-e3419f91-dd74-4975-adea-1a9e2bf9b36c' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0.0,  1.0,  2.0,  3.0,  4.0,  5.0,  6.0,  7.0,  8.0,  9.0, 10.0, 11.0,\n       12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0,\n       24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0,\n       36.0, 37.0, 38.0, 39.0],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-21efbe62-28b4-4d82-a3dc-ab82542af387' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-21efbe62-28b4-4d82-a3dc-ab82542af387' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>","content_type":"text/html"}}}],"key":"zuFFvtvZu0"}],"key":"XE5KZkTTZ5"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The reconstructed ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DT0rfspqP2"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ALTIacKlwD"},{"type":"text","value":" has the upsampled ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kNMXf6b1FW"},{"type":"inlineCode","value":"x","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sDMKWdgujw"},{"type":"text","value":" dimension. We can compare its shape to the original.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fuUy7QesoQ"}],"key":"FIi8GTSeoo"}],"key":"R2gLaDh14G"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(f\"Original shape: {da.shape}\")\nprint(f\"Reconstructed shape: {reconstructed_da.shape}\")","key":"yfDH5Yxpt1"},{"type":"output","id":"U2Ofk6-YIevQclGOOfy7n","data":[{"output_type":"stream","name":"stdout","text":"Original shape: (50, 40)\nReconstructed shape: (100, 40)\n"}],"key":"YCYmd7r2bs"}],"key":"TfUJZnlgZe"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The reconstructed array has twice the number of elements in the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cFZW3PSDSH"},{"type":"inlineCode","value":"x","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rKngupvTTW"},{"type":"text","value":" dimension, as expected. This concludes the demonstration of reconstructing an ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"npCMbl9UFq"},{"type":"inlineCode","value":"xarray.Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XQRDiR7fSy"},{"type":"text","value":" from model outputs using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YFHGIqJW94"},{"type":"inlineCode","value":"xbatcher","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tujrjpGp2E"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OHB7Gp73To"}],"key":"QQlt1tsoqv"}],"key":"ScynwDeheV"}],"key":"Einy9SvZel"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Dataloading from Xarray Datasets","url":"/notebooks/xbatcher-dataloading","group":"Xbatcher fundamentals"},"next":{"title":"Infer model on array","url":"/notebooks/inference-testing","group":"Testing model inference"}}},"domain":"http://localhost:3000"}