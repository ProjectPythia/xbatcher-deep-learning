{"version":"1","records":[{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook"},"type":"lvl1","url":"/","position":0},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook"},"content":"\n\n\n\n\n\n\n\n\n\nSee the \n\nCookbook Contributor’s Guide for step-by-step instructions on how to create your new Cookbook and get it hosted on the \n\nPythia Cookbook Gallery!\n\nThis Project Pythia Cookbook covers ... (replace ... with the main subject of your cookbook ... e.g., working with radar data in Python)","type":"content","url":"/","position":1},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl2":"Motivation"},"type":"lvl2","url":"/#motivation","position":2},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl2":"Motivation"},"content":"(Add a few sentences stating why this cookbook will be useful. What skills will you, “the chef”, gain once you have reached the end of the cookbook?)","type":"content","url":"/#motivation","position":3},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl2":"Authors"},"type":"lvl2","url":"/#authors","position":4},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl2":"Authors"},"content":"First Author, \n\nSecond Author, etc. Acknowledge primary content authors here","type":"content","url":"/#authors","position":5},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl3":"Contributors","lvl2":"Authors"},"type":"lvl3","url":"/#contributors","position":6},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl3":"Contributors","lvl2":"Authors"},"content":"","type":"content","url":"/#contributors","position":7},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl2":"Structure"},"type":"lvl2","url":"/#structure","position":8},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl2":"Structure"},"content":"(State one or more sections that will comprise the notebook. E.g., This cookbook is broken up into two main sections - “Foundations” and “Example Workflows.” Then, describe each section below.)","type":"content","url":"/#structure","position":9},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl3":"Section 1 ( Replace with the title of this section, e.g. “Foundations” )","lvl2":"Structure"},"type":"lvl3","url":"/#section-1-replace-with-the-title-of-this-section-e-g-foundations","position":10},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl3":"Section 1 ( Replace with the title of this section, e.g. “Foundations” )","lvl2":"Structure"},"content":"(Add content for this section, e.g., \"The foundational content includes ... \")","type":"content","url":"/#section-1-replace-with-the-title-of-this-section-e-g-foundations","position":11},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl3":"Section 2 ( Replace with the title of this section, e.g. “Example workflows” )","lvl2":"Structure"},"type":"lvl3","url":"/#section-2-replace-with-the-title-of-this-section-e-g-example-workflows","position":12},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl3":"Section 2 ( Replace with the title of this section, e.g. “Example workflows” )","lvl2":"Structure"},"content":"(Add content for this section, e.g., \"Example workflows include ... \")","type":"content","url":"/#section-2-replace-with-the-title-of-this-section-e-g-example-workflows","position":13},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl2":"Running the Notebooks"},"type":"lvl2","url":"/#running-the-notebooks","position":14},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl2":"Running the Notebooks"},"content":"You can either run the notebook using \n\nBinder or on your local machine.","type":"content","url":"/#running-the-notebooks","position":15},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-binder","position":16},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"content":"The simplest way to interact with a Jupyter Notebook is through\n\n\nBinder, which enables the execution of a\n\n\nJupyter Book in the cloud. The details of how this works are not\nimportant for now. All you need to know is how to launch a Pythia\nCookbooks chapter via Binder. Simply navigate your mouse to\nthe top right corner of the book chapter you are viewing and click\non the rocket ship icon, (see figure below), and be sure to select\n“launch Binder”. After a moment you should be presented with a\nnotebook that you can interact with. I.e. you’ll be able to execute\nand even change the example programs. You’ll see that the code cells\nhave no output at first, until you execute them by pressing\nShift+Enter. Complete details on how to interact with\na live Jupyter notebook are described in \n\nGetting Started with\nJupyter.\n\nNote, not all Cookbook chapters are executable. If you do not see\nthe rocket ship icon, such as on this page, you are not viewing an\nexecutable book chapter.","type":"content","url":"/#running-on-binder","position":17},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-your-own-machine","position":18},{"hierarchy":{"lvl1":"(Replace_with_your_title) Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"content":"If you are interested in running this material locally on your computer, you will need to follow this workflow:\n\n(Replace “cookbook-example” with the title of your cookbooks)\n\nClone the https://github.com/ProjectPythia/cookbook-example repository: git clone https://github.com/ProjectPythia/cookbook-example.git\n\nMove into the cookbook-example directorycd cookbook-example\n\nCreate and activate your conda environment from the environment.yml fileconda env create -f environment.yml\nconda activate cookbook-example\n\nMove into the notebooks directory and start up Jupyterlabcd notebooks/\njupyter lab","type":"content","url":"/#running-on-your-own-machine","position":19},{"hierarchy":{"lvl1":"Functions for other notebooks to use"},"type":"lvl1","url":"/notebooks/functions","position":0},{"hierarchy":{"lvl1":"Functions for other notebooks to use"},"content":"import xarray as xr\nimport numpy as np\nimport xbatcher\nfrom xbatcher.loaders.torch import MapDataset\nimport torch\n\ndef _get_output_array_size(\n    bgen: xbatcher.BatchGenerator,\n    output_tensor_dim: dict[str, int],\n    new_dim: list[str],\n    resample_dim: list[str]\n):\n    output_size = {}\n    for key, size in output_tensor_dim.items():\n        if key in new_dim:\n            # This is a new axis, size is determined\n            # by the tensor size.\n            output_size[key] = output_tensor_dim[key]\n        else:\n            # This is a resampled axis, determine the new size\n            # by the ratio of the batchgen window to the tensor size.\n            window_size = bgen.input_dims[key]\n            tensor_size = output_tensor_dim[key]\n            resample_ratio = tensor_size / window_size\n    \n            temp_output_size = bgen.ds.sizes[key] * resample_ratio\n            assert temp_output_size.is_integer()\n            output_size[key] = int(temp_output_size)\n    return output_size\n\ndef predict_on_array(\n    dataset: MapDataset,\n    model: torch.nn.Module,\n    output_tensor_dim: dict[str, int],\n    new_dim: list[str],\n    resample_dim: list[str],\n    batch_size: int=16\n):\n    # Set up output array\n    output_size = _get_output_array_size(dataset.X_generator, output_tensor_dim, new_dim, resample_dim)\n            \n    output_da = xr.DataArray(\n        data=np.zeros(tuple(output_size.values())),\n        dims=tuple(output_size.keys())\n    )\n    output_n = xr.full_like(output_da, 0)\n    \n    # Prepare data laoder\n    loader = torch.utils.data.DataLoader(dataset, batch_size=batch_size)\n\n    # Iterate over each batch\n    for i, batch in enumerate(loader):\n        out_batch = model(batch).detach().numpy()\n\n        # Iterate over each example in the batch\n        for ib in range(out_batch.shape[0]):\n            # Get the slice object associated with this example\n            old_indexer = dataset.X_generator._batch_selectors.selectors[(i*batch_size)+ib][0]\n            # Only index into axes that are resampled, rescaling the bounds\n            new_indexer = dict()\n            for key in old_indexer:\n                if key in resample_dim:\n                    resample_ratio = output_tensor_dim[key] / dataset.X_generator.input_dims[key]\n                    new_indexer[key] = slice(\n                        int(old_indexer[key].start * resample_ratio),\n                        int(old_indexer[key].stop * resample_ratio)\n                    )\n            \n            output_da.loc[new_indexer] += out_batch[ib, ...]\n            output_n.loc[new_indexer] += 1\n    \n    # TODO aggregate output\n    return output_da\n\nfrom dummy_models import *","type":"content","url":"/notebooks/functions","position":1},{"hierarchy":{"lvl1":"How to Cite This Cookbook"},"type":"lvl1","url":"/notebooks/how-to-cite","position":0},{"hierarchy":{"lvl1":"How to Cite This Cookbook"},"content":"The material in this Project Pythia Cookbook is licensed for free and open consumption and reuse. All code is served under \n\nApache 2.0, while all non-code content is licensed under \n\nCreative Commons BY 4.0 (CC BY 4.0). Effectively, this means you are free to share and adapt this material so long as you give appropriate credit to the Cookbook authors and the Project Pythia community.\n\nThe source code for the book is \n\nreleased on GitHub and archived on Zenodo. This DOI will always resolve to the latest release of the book source:\n\n","type":"content","url":"/notebooks/how-to-cite","position":1}]}