{"version":2,"kind":"Notebook","sha256":"f0c90c879fa08f341dc4df3fd84a50ab44c8b9066fea25e0f1167d813e676364","slug":"notebooks.xbatcher-reconstruction","location":"/notebooks/xbatcher_reconstruction.ipynb","dependencies":[],"frontmatter":{"title":"Reconstructing Xarray Datasets from Model Outputs","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"cookbook-dev","language":"python"},"authors":[{"nameParsed":{"literal":"Keenan Ganz, Nabin Kalauni, and The Project Pythia Community","given":"and The Project Pythia Community","family":"Keenan Ganz","suffix":"Nabin Kalauni"},"name":"Keenan Ganz, Nabin Kalauni, and The Project Pythia Community","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/xbatcher-deep-learning","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/xbatcher-deep-learning/blob/main/notebooks/xbatcher_reconstruction.ipynb","exports":[{"format":"ipynb","filename":"xbatcher_reconstruction.ipynb","url":"/xbatcher-deep-learning/build/xbatcher_reconstruct-5c3b18d1257dc56acba948a1eea85503.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Iqxc2D3mJK"}],"key":"D8XCcl6At5"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QfO7ApcWWs"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"CU1Y8dXM4n"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"This notebook addresses the process of reconstructing an ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"V26Ua0EFf4"},{"type":"inlineCode","value":"xarray.DataArray","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"CmpyaFUUe4"},{"type":"text","value":" from the output of a machine learning model. While the previous notebook focused on generating batches from ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"xvLb1OgXLC"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"NorARRHR6H"},{"type":"text","value":" objects, this guide details the reverse process: assembling model outputs back into a coherent, labeled ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"VZHkrKcz8c"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bqw7R4vlCJ"},{"type":"text","value":" object. This is a common requirement in scientific machine learning workflows, where the model output needs to be analyzed in its original spatial or temporal context.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wxdVyhwZgi"}],"key":"AzZbKtl9qC"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We will examine a function that reassembles model outputs, including a detailed look at how an internal API of ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"NPLzCl5usv"},{"type":"inlineCode","value":"xbatcher","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JLhYMipQaA"},{"type":"text","value":" can be used to map batch outputs back to their original coordinates.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wBLX2UbZvE"}],"key":"lyjrElH0Pd"}],"key":"shTczVP8Ds"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PENThRrfyf"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"iJJIeV5Jcf"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FKwLK0XZ5B"}],"key":"lGLz2WJOK7"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZSoFp2Rn79"}],"key":"LnbyEUWS5v"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Plyl45WS5I"}],"key":"qwcBOPq10c"}],"key":"IEWQS4f4zT"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://tutorial.xarray.dev/overview/xarray-in-45-min.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Intro to Xarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pBqFyxX0MU"}],"urlSource":"https://tutorial.xarray.dev/overview/xarray-in-45-min.html","key":"Nr2epNb5St"}],"key":"pvw8qebLjS"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"qegaXZvnHz"}],"key":"g9IPsnGExS"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Array indexing","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cwpWZ0497D"}],"key":"A8I2JitJLL"}],"key":"Qv1AT0N2z5"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://docs.pytorch.org/tutorials/beginner/basics/intro.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"PyTorch fundamentals","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"QWQEbMonr6"}],"urlSource":"https://docs.pytorch.org/tutorials/beginner/basics/intro.html","key":"OKcES1Crcg"}],"key":"TPwHgcChBO"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"hZ4qZiVzmt"}],"key":"Ob52oYAtaE"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Model training loop","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Tc6Y6EeGGc"}],"key":"Iu32ihlUZw"}],"key":"hKUMeTHHSH"}],"key":"XKe9fE2Wl0"}],"key":"Rf9GaK3R2s"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jdqdZOdUul"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"BR4fCtBau4"}],"key":"kxIxEOn6zm"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport numpy as np\nimport torch\nimport xbatcher\nfrom xbatcher.loaders.torch import MapDataset\nfrom typing import Literal\n\nfrom dummy_models import ExpandAlongAxis","key":"elEjtJZVHF"},{"type":"output","id":"Krupxk4xppt-rIp9E-IYY","data":[],"key":"ZerYKwXij7"}],"key":"EfsacF4J7y"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Setup: Data, Batches, and a Dummy Model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kw8HnK7aMV"}],"identifier":"setup-data-batches-and-a-dummy-model","label":"Setup: Data, Batches, and a Dummy Model","html_id":"setup-data-batches-and-a-dummy-model","implicit":true,"key":"NVgb4cdXgw"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We will begin by creating a sample ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EaFAlOujSU"},{"type":"inlineCode","value":"xarray.DataArray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tRhAyGNELK"},{"type":"text","value":" and a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Fpxws68eCV"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YbSur5WUvU"},{"type":"text","value":". We will also instantiate a dummy model that transforms the data, simulating a common machine learning scenario where the output dimensions differ from the input dimensions (e.g., super-resolution).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kKwRAbaQ75"}],"key":"UQiOmRT9lR"}],"key":"K3VKyekTZ9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"da = xr.DataArray(\n    data=np.random.rand(50, 40).astype(np.float32),\n    dims=(\"x\", \"y\"),\n    coords={\"x\": np.arange(50), \"y\": np.arange(40)},\n)\nda","key":"Wd1QYkB5xu"},{"type":"output","id":"n0R9GiOiOWM-RM4F06QIp","data":[{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/plain":{"content":"<xarray.DataArray (x: 50, y: 40)> Size: 8kB\narray([[0.05824776, 0.99282515, 0.10700098, ..., 0.84982646, 0.32319   ,\n        0.518388  ],\n       [0.7524229 , 0.8012025 , 0.6850836 , ..., 0.9648153 , 0.23322582,\n        0.02720294],\n       [0.03772063, 0.5883351 , 0.08939172, ..., 0.67723316, 0.5203547 ,\n        0.55502653],\n       ...,\n       [0.62957513, 0.8938326 , 0.5007286 , ..., 0.49288565, 0.37541977,\n        0.07374022],\n       [0.71929884, 0.864815  , 0.1002003 , ..., 0.468913  , 0.40490586,\n        0.68304014],\n       [0.06779575, 0.69567883, 0.35885617, ..., 0.7798679 , 0.5712631 ,\n        0.2803763 ]], shape=(50, 40), dtype=float32)\nCoordinates:\n  * x        (x) int64 400B 0 1 2 3 4 5 6 7 8 9 ... 41 42 43 44 45 46 47 48 49\n  * y        (y) int64 320B 0 1 2 3 4 5 6 7 8 9 ... 31 32 33 34 35 36 37 38 39","content_type":"text/plain"},"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base rgba(0, 0, 0, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, white)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 15))\n  );\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base, rgba(255, 255, 255, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, #111111)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 15))\n  );\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n  border: 2px solid transparent !important;\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0) !important;\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  border-color: var(--xr-background-color-row-odd);\n  margin-bottom: 0;\n  padding-top: 2px;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n  border-color: var(--xr-background-color-row-even);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  border-top: 2px dotted var(--xr-background-color);\n  padding-bottom: 20px !important;\n  padding-top: 10px !important;\n}\n\n.xr-var-attrs-in + label,\n.xr-var-data-in + label,\n.xr-index-data-in + label {\n  padding: 0 1px;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-data > pre,\n.xr-index-data > pre,\n.xr-var-data > table > tbody > tr {\n  background-color: transparent !important;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n\n.xr-var-attrs-in:checked + label > .xr-icon-file-text2,\n.xr-var-data-in:checked + label > .xr-icon-database,\n.xr-index-data-in:checked + label > .xr-icon-database {\n  color: var(--xr-font-color0);\n  filter: drop-shadow(1px 1px 5px var(--xr-font-color2));\n  stroke-width: 0.8px;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (x: 50, y: 40)&gt; Size: 8kB\narray([[0.05824776, 0.99282515, 0.10700098, ..., 0.84982646, 0.32319   ,\n        0.518388  ],\n       [0.7524229 , 0.8012025 , 0.6850836 , ..., 0.9648153 , 0.23322582,\n        0.02720294],\n       [0.03772063, 0.5883351 , 0.08939172, ..., 0.67723316, 0.5203547 ,\n        0.55502653],\n       ...,\n       [0.62957513, 0.8938326 , 0.5007286 , ..., 0.49288565, 0.37541977,\n        0.07374022],\n       [0.71929884, 0.864815  , 0.1002003 , ..., 0.468913  , 0.40490586,\n        0.68304014],\n       [0.06779575, 0.69567883, 0.35885617, ..., 0.7798679 , 0.5712631 ,\n        0.2803763 ]], shape=(50, 40), dtype=float32)\nCoordinates:\n  * x        (x) int64 400B 0 1 2 3 4 5 6 7 8 9 ... 41 42 43 44 45 46 47 48 49\n  * y        (y) int64 320B 0 1 2 3 4 5 6 7 8 9 ... 31 32 33 34 35 36 37 38 39</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>x</span>: 50</li><li><span class='xr-has-index'>y</span>: 40</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-beff8cdf-bfc7-4629-8083-4fab17d23d11' class='xr-array-in' type='checkbox' checked><label for='section-beff8cdf-bfc7-4629-8083-4fab17d23d11' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.05825 0.9928 0.107 0.9019 0.9078 ... 0.1854 0.7799 0.5713 0.2804</span></div><div class='xr-array-data'><pre>array([[0.05824776, 0.99282515, 0.10700098, ..., 0.84982646, 0.32319   ,\n        0.518388  ],\n       [0.7524229 , 0.8012025 , 0.6850836 , ..., 0.9648153 , 0.23322582,\n        0.02720294],\n       [0.03772063, 0.5883351 , 0.08939172, ..., 0.67723316, 0.5203547 ,\n        0.55502653],\n       ...,\n       [0.62957513, 0.8938326 , 0.5007286 , ..., 0.49288565, 0.37541977,\n        0.07374022],\n       [0.71929884, 0.864815  , 0.1002003 , ..., 0.468913  , 0.40490586,\n        0.68304014],\n       [0.06779575, 0.69567883, 0.35885617, ..., 0.7798679 , 0.5712631 ,\n        0.2803763 ]], shape=(50, 40), dtype=float32)</pre></div></div></li><li class='xr-section-item'><input id='section-9195048b-e50d-440d-89f1-33e3086fd886' class='xr-section-summary-in' type='checkbox'  checked><label for='section-9195048b-e50d-440d-89f1-33e3086fd886' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 5 6 ... 44 45 46 47 48 49</div><input id='attrs-551d8ba6-2d20-445a-869a-3f00d7e95bb3' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-551d8ba6-2d20-445a-869a-3f00d7e95bb3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a4dbe32b-e3ac-4b21-8956-1fd3ea766ccc' class='xr-var-data-in' type='checkbox'><label for='data-a4dbe32b-e3ac-4b21-8956-1fd3ea766ccc' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 5 6 ... 34 35 36 37 38 39</div><input id='attrs-c0991efa-2b21-4a44-989c-02cdf3962975' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c0991efa-2b21-4a44-989c-02cdf3962975' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-029962e2-9732-4e98-a24d-0436a36607a9' class='xr-var-data-in' type='checkbox'><label for='data-029962e2-9732-4e98-a24d-0436a36607a9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-5ae65078-5ce2-4587-b5fb-e1940073d250' class='xr-section-summary-in' type='checkbox'  ><label for='section-5ae65078-5ce2-4587-b5fb-e1940073d250' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-a3232fe8-4277-4cbf-92d2-46ab92c41606' class='xr-index-data-in' type='checkbox'/><label for='index-a3232fe8-4277-4cbf-92d2-46ab92c41606' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49],\n      dtype=&#x27;int64&#x27;, name=&#x27;x&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-13d0284e-5898-4355-8e1c-182dfc5f8c99' class='xr-index-data-in' type='checkbox'/><label for='index-13d0284e-5898-4355-8e1c-182dfc5f8c99' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39],\n      dtype=&#x27;int64&#x27;, name=&#x27;y&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-51eb70fd-ed9e-4b2c-b310-f923413c5521' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-51eb70fd-ed9e-4b2c-b310-f923413c5521' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>","content_type":"text/html"}}}],"key":"RUJiHyMXd2"}],"key":"OV3FVZB6k1"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Next, we create the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HMG0J6kvN1"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"l0LfFowtkX"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"inkOVuz8lY"}],"key":"s2QAnBem4Q"}],"key":"O8KB7dRqIm"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bgen = xbatcher.BatchGenerator(da, input_dims={\"x\": 10, \"y\": 10})","key":"YfqJPjKgn7"},{"type":"output","id":"QKySjAd9kh8gc3NUlQYEo","data":[],"key":"gxmicXtJ8M"}],"key":"t8oWjWwGPx"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For the model, we will use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pXxkiuZ5ym"},{"type":"inlineCode","value":"ExpandAlongAxis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aOmXZ5cHQA"},{"type":"text","value":" from ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LpCyg40VtH"},{"type":"inlineCode","value":"dummy_models.py","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gTrcVqiaLB"},{"type":"text","value":". This model upsamples the input along a specified axis, changing the dimensions of the data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ztqFt1La5y"}],"key":"uJUJFTHB6F"}],"key":"OKKnXM0JD3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# The model will expand the 'x' dimension by a factor of 2\nmodel = ExpandAlongAxis(ax=1, n_repeats=2)","key":"ztXr51Qfo9"},{"type":"output","id":"JRMZ9xbyt9m3K4wR8tRrf","data":[],"key":"neM45Kf8h6"}],"key":"LzR4hKOTsz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H2I5yMgH5V"},{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"x4n07vmd6G"},{"type":"text","value":" Function","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zzC7teEeRe"}],"identifier":"the-predict-on-array-function","label":"The predict_on_array Function","html_id":"the-predict-on-array-function","implicit":true,"key":"H3GiGh5kPM"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ep47PKJpmr"},{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MCRn66C6iV"},{"type":"text","value":" function (from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iEzBoe3V9N"},{"type":"inlineCode","value":"functions.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"x3pfhlptbw"},{"type":"text","value":") is designed to take batches from a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SNtspuo6Kf"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vZS0S22LHT"},{"type":"text","value":", pass them through a model, and reassemble the outputs. The following sections will break down this function and its helpers.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aPXgjqjHUc"}],"key":"S1shS4Peau"}],"key":"siGCrdQDHO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _get_resample_factor(\n    bgen: xbatcher.BatchGenerator,\n    output_tensor_dim: dict[str, int],\n    resample_dim: list[str]\n):\n    resample_factor = {}\n    for dim in resample_dim:\n        r = output_tensor_dim[dim] / bgen.input_dims[dim]\n        is_int = (r == int(r))\n        is_inv_int = (1/r == int(1/r)) if r != 0 else False\n        assert is_int or is_inv_int, f\"Resample ratio for dim '{dim}' must be an integer or its inverse.\"\n        resample_factor[dim] = r\n\n    return resample_factor","key":"ETYiZlezKV"},{"type":"output","id":"oSC6pNMi8jDGI3fcpC5Zp","data":[],"key":"CwfZfYSDBZ"}],"key":"r5eg87FiWq"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_get_resample_factor","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tejrRnwQ2E"}],"identifier":"id-get-resample-factor","label":"_get_resample_factor","html_id":"id-get-resample-factor","implicit":true,"key":"GLN51J6DFw"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This helper function calculates the resampling factor for each dimension. For example, if input batches have ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SjdcCM7yXT"},{"type":"inlineCode","value":"x=10","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VqWIHofxv0"},{"type":"text","value":" and the model outputs tensors with ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dLgFYoAdiw"},{"type":"inlineCode","value":"x=20","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gs1rIQCaMD"},{"type":"text","value":", the resampling factor for ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RNlLS1lCcC"},{"type":"inlineCode","value":"x","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"a2o5wIpAvL"},{"type":"text","value":" is 2. This is used to determine the dimensions of the final reconstructed array.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X53zRFQNxX"}],"key":"hFWmmZ8etS"}],"key":"pCdU1YeHhe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _get_output_array_size(\n    bgen: xbatcher.BatchGenerator,\n    output_tensor_dim: dict[str, int],\n    new_dim: list[str],\n    core_dim: list[str],\n    resample_dim: list[str]\n):\n    resample_factor = _get_resample_factor(bgen, output_tensor_dim, resample_dim)\n    output_size = {}\n    for key, size in output_tensor_dim.items():\n        if key in new_dim:\n            output_size[key] = output_tensor_dim[key]\n        elif key in core_dim:\n            if output_tensor_dim[key] != bgen.ds.sizes[key]:\n                raise ValueError(\n                    f\"Axis {key} is a core dim, but the tensor size\"\n                    f\"({output_tensor_dim[key]}) does not equal the \"\n                    f\"source data array size ({bgen.ds.sizes[key]}).\"\n                )\n            output_size[key] = bgen.ds.sizes[key]\n        elif key in resample_dim:\n            temp_output_size = bgen.ds.sizes[key] * resample_factor[key]\n            assert temp_output_size.is_integer(), f\"Resampling for dim '{key}' results in non-integer size.\"\n            output_size[key] = int(temp_output_size)\n        else:\n            raise ValueError(f\"Axis {key} must be specified in one of new_dim, core_dim, or resample_dim\") \n    return output_size","key":"sFGyIq8xd1"},{"type":"output","id":"-Trj7vlDLN-OOEj8uzOx-","data":[],"key":"ttCOuyQ4jK"}],"key":"ZfUjHdRfA8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_get_output_array_size","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N8MQ7KYuid"}],"identifier":"id-get-output-array-size","label":"_get_output_array_size","html_id":"id-get-output-array-size","implicit":true,"key":"JEzqWcgLmK"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This function determines the final size of the reconstructed array. It uses the resampling factor and also considers ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OIDl9ptJzI"},{"type":"inlineCode","value":"new_dim","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ueSD2lVihl"},{"type":"text","value":" (dimensions that are new in the output) and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"w39P3NaZrP"},{"type":"inlineCode","value":"core_dim","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nHEX4eiUGS"},{"type":"text","value":" (dimensions that are not batched over and remain unchanged).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mZdUhBVyA3"}],"key":"sFkHvVGSf0"}],"key":"k2IcyO2GR3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _resample_coordinate(\n    coord: xr.DataArray,\n    factor: float,\n    mode: Literal[\"centers\", \"edges\"]=\"edges\"\n) -> np.ndarray:\n    assert len(coord.shape) == 1 and coord.shape[0] > 1\n    assert (coord.shape[0] * factor).is_integer()\n    old_step = (coord.data[1] - coord.data[0])\n    offset = 0 if mode == \"edges\" else old_step / 2\n    new_step = old_step / factor\n    coord = coord - offset\n    new_coord_end = coord.max().item() + old_step\n    return np.arange(coord.min().item(), new_coord_end, step=new_step) + offset","key":"mmM8IEnkNM"},{"type":"output","id":"df1zfBv66uMMPGrKnkkTb","data":[],"key":"UQz3QXY6yH"}],"key":"bV5Ddbrg84"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_resample_coordinate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QIiC0arCj1"}],"identifier":"id-resample-coordinate","label":"_resample_coordinate","html_id":"id-resample-coordinate","implicit":true,"key":"MaZtKq9kQz"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If the size of a dimension is changed, its coordinates must also be updated. This function handles the resampling of coordinates.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Tns5m7wQvJ"}],"key":"o98CVIvdl3"}],"key":"SU8XZnq5QG"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _get_output_array_coordinates(\n    src_da: xr.DataArray,\n    output_array_dim: list[str],\n    resample_factor: dict[str, int],\n    resample_mode: Literal[\"centers\", \"edges\"]=\"edges\"\n) -> dict[str, np.ndarray]:\n    output_coords = {}\n    for dim in output_array_dim:\n        if dim in src_da.coords and dim in resample_factor:\n            output_coords[dim] = _resample_coordinate(src_da[dim], resample_factor[dim], resample_mode)\n        elif dim in src_da.coords:\n            output_coords[dim] = src_da[dim].copy(deep=True).data\n        else:\n            continue\n    return output_coords","key":"bKQo276Coc"},{"type":"output","id":"fsgjZGXsSVzKtO7dTsyQW","data":[],"key":"vtr15Hig26"}],"key":"TXOooJlsjI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_get_output_array_coordinates","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ip72LPcjgq"}],"identifier":"id-get-output-array-coordinates","label":"_get_output_array_coordinates","html_id":"id-get-output-array-coordinates","implicit":true,"key":"skOcNT6L0S"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This function generates a dictionary of the new coordinates for the output array.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"T2Id8q1XhK"}],"key":"bXhzHAt5AZ"}],"key":"IzgFELCOfb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def predict_on_array(\n    dataset: MapDataset,\n    model: torch.nn.Module,\n    output_tensor_dim: dict[str, int],\n    new_dim: list[str],\n    core_dim: list[str],\n    resample_dim: list[str],\n    resample_mode: Literal[\"centers\", \"edges\"]=\"edges\",\n    batch_size: int=16\n) -> xr.DataArray:\n    s_new = set(new_dim)\n    s_core = set(core_dim)\n    s_resample = set(resample_dim)\n\n    if s_new & s_core or s_new & s_resample or s_core & s_resample:\n        raise ValueError(\"new_dim, core_dim, and resample_dim must be disjoint sets.\")\n\n    bgen = dataset.X_generator\n\n    resample_factor = _get_resample_factor(\n        bgen,\n        output_tensor_dim, \n        resample_dim\n    )\n    \n    output_size = _get_output_array_size(\n        bgen,\n        output_tensor_dim,\n        new_dim,\n        core_dim,\n        resample_dim\n    )\n            \n    output_da = xr.DataArray(\n        data=np.zeros(tuple(output_size.values())),\n        dims=tuple(output_size.keys()),\n    )\n    output_n = xr.full_like(output_da, 0)\n    \n    loader = torch.utils.data.DataLoader(dataset, batch_size=batch_size)\n\n    for i, batch in enumerate(loader):\n        input_tensor = batch[0] if isinstance(batch, (list, tuple)) else batch\n        out_batch = model(input_tensor).detach().numpy()\n\n        for ib in range(out_batch.shape[0]):\n            global_index = (i * batch_size) + ib\n            old_indexer = bgen._batch_selectors.selectors[global_index][0]\n            new_indexer = {}\n            for key in old_indexer:\n                if key in resample_dim:\n                    new_indexer[key] = slice(\n                        int(old_indexer[key].start * resample_factor[key]),\n                        int(old_indexer[key].stop * resample_factor[key])\n                    )\n\n            output_da.loc[new_indexer] += out_batch[ib, ...]\n            output_n.loc[new_indexer] += 1\n\n    output_da = output_da / output_n\n\n    output_da = output_da.assign_coords(\n        _get_output_array_coordinates(\n            dataset.X_generator.ds, \n            list(output_tensor_dim.keys()), \n            resample_factor, \n            resample_mode\n        )\n    )\n\n    return output_da","key":"DuTBueyGnk"},{"type":"output","id":"50D7yaCOregaEFb_ZJRya","data":[],"key":"LCwx9KpTdP"}],"key":"R7Vy4bVl7l"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zb9bCppxCD"},{"type":"text","value":" Internals","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KJGz6Mda7s"}],"identifier":"predict-on-array-internals","label":"predict_on_array Internals","html_id":"predict-on-array-internals","implicit":true,"key":"EGiMjxj6A1"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The key steps of this function are as follows:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FKnvGwQI4h"}],"key":"MNqikKWElG"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Initialization","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"psMFLKG7Pg"}],"key":"OkC4VyuuZA"},{"type":"text","value":": An empty ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VCdRtWn4Je"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"i1NAGR2MAy"},{"type":"text","value":" (","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Joq9eRpEq2"},{"type":"inlineCode","value":"output_da","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YbwxNGbvF7"},{"type":"text","value":") is created with the final dimensions, along with a corresponding ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uzpnBEHLPr"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"vzVuduS5cL"},{"type":"text","value":" (","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YbOsIcNC7D"},{"type":"inlineCode","value":"output_n","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WRbmLFEQ6N"},{"type":"text","value":") to track the number of predictions for each element (for averaging in case of overlaps).","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"FzXBZ3kaaA"}],"key":"w7LeGkOMZu"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Iteration","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"BlG6nG5d9t"}],"key":"shw69holA5"},{"type":"text","value":": The function iterates through the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"fUk3qys6te"},{"type":"inlineCode","value":"DataLoader","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KT2Hw8c2IF"},{"type":"text","value":".","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"goAUbL21HP"}],"key":"O3L6AL1cr5"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The Internal API","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"NBuZVpwxhC"}],"key":"OwIbNsAsiC"},{"type":"text","value":": The core of the reconstruction is ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"dNNERIIhMN"},{"type":"inlineCode","value":"bgen._batch_selectors.selectors[global_index]","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GqaZPp7a3j"},{"type":"text","value":". This internal attribute of the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"K1a1ta0ocf"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ZJuhVfLbKA"},{"type":"text","value":" stores the slice objects for each batch, providing a map from the batch to the original ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"sfJPSLUjwd"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"YjZlMjpg5L"},{"type":"text","value":"’s coordinate space.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uvteIfxxnB"}],"key":"DntAsHuiaC"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Disclaimer","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"W3BNTo6eLr"}],"key":"m4Q4VTDjWR"},{"type":"text","value":": Accessing internal attributes such as ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"htHcPJlXsP"},{"type":"inlineCode","value":"_batch_selectors","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"FgzPD2R4HQ"},{"type":"text","value":" is not part of the public API and may change in future versions of ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ZDrbVyamNS"},{"type":"inlineCode","value":"xbatcher","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"mO0ivbF6WY"},{"type":"text","value":".","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"DUiTIy0jxG"}],"key":"iY0GduOxvv"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Rescaling and Placing","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"XGLMah05wF"}],"key":"kiDvKcwKsU"},{"type":"text","value":": The resampling factor is used to scale the slices, and ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"FfhrRyLQCI"},{"type":"inlineCode","value":".loc","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Z6wszvt3b4"},{"type":"text","value":" is used to place the model’s output into the correct location in ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"SUVEM1JwDN"},{"type":"inlineCode","value":"output_da","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"uBWVc1gA88"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"dkaTqVs71A"}],"key":"aMqvddBjJh"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Averaging and Coordinates","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"AOfP5fCoGe"}],"key":"YPjw9JKYaH"},{"type":"text","value":": Finally, the predictions are averaged (if there were overlaps) and the new coordinates are assigned.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"U8TaOF3DWm"}],"key":"Wb34RUpPsQ"}],"key":"eojr89Si4L"}],"key":"gDwl0p20TA"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reconstructing the Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OJx5QHaGJJ"}],"identifier":"reconstructing-the-dataset","label":"Reconstructing the Dataset","html_id":"reconstructing-the-dataset","implicit":true,"key":"G4v8KZIR8L"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We will now use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oU4GcpviDX"},{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"i8cfLJhOwB"},{"type":"text","value":" function to reconstruct the dataset. The most important part of using this function is correctly specifying the arguments ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vExD3GCfW5"},{"type":"inlineCode","value":"new_dim","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vUrPO149y9"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lKMrOrtF1R"},{"type":"inlineCode","value":"core_dim","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Fzk2lGLlCq"},{"type":"text","value":", and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fEoRJgglB9"},{"type":"inlineCode","value":"resample_dim","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OJE8EeXEO5"},{"type":"text","value":". These lists all contain dimensions given in ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QS2CAcWpck"},{"type":"inlineCode","value":"output_tensor_dim","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZdFDwwMLnN"},{"type":"text","value":" and help us get an idea of how model output compares to the input data. In general:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MGRGiBh5CP"}],"key":"sncccgQXcT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":"new_dim","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"KYrjv98tXe"},{"type":"text","value":": Tensor dimensions that do not appear at all in the original xarray object.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jZntTvhLLf"}],"key":"iQeco4NOeZ"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"inlineCode","value":"core_dim","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"sG5rQsAoWh"},{"type":"text","value":": Tensor dimensions that are present in the original xarray object, but are not used for batch generation. We assume that all elements of this dimension in the xarray object flow through the model to the output. Coordinates are simply copied from the original xarray object.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"eaIW5qmigP"}],"key":"b1f3zZXrdm"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"inlineCode","value":"resample_dim","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"pazVR0v1wl"},{"type":"text","value":": Tensor dimensions that are present in the original xarray object ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"RHLsCkjTXT"},{"type":"emphasis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"and","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"AiazetKNV4"}],"key":"BWm4n2SuOw"},{"type":"text","value":" used for batch generation. These dimensions are allowed to change size (but see below note) and coordinates are resampled accordingly in the reconstructed array.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"TE59ZsYt4R"}],"key":"ABeO8BsXwO"}],"key":"rObNsi6Z65"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Let’s apply these rules to our present example. The batch generator creates tensors of size ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"EmGM8jLs5E"},{"type":"inlineCode","value":"(x=10, y=10)","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"XyO9vzhwqO"},{"type":"text","value":" and the dummy model makes tensors of size ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"DqHH8gGwCr"},{"type":"inlineCode","value":"(x=20, y=10)","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"TYyETC8JGZ"},{"type":"text","value":". In this case, all tensor dimensions are present in the original data array and are used for batch generation. Therefore, both ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"DC44FB72M2"},{"type":"inlineCode","value":"x","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"pn45uoE0wA"},{"type":"text","value":" and ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"xCFSXqwDla"},{"type":"inlineCode","value":"y","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"cfSVB8kx18"},{"type":"text","value":" go in ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"pzY4Zc0vKy"},{"type":"inlineCode","value":"resample_dim","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"CuhMUF4u9C"},{"type":"text","value":". Now that all tensor dimensions are accounted for, we can simply leave ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ERjuybenYI"},{"type":"inlineCode","value":"new_dim","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"X5cfVdzjvK"},{"type":"text","value":" and ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"RnupLTeBdH"},{"type":"inlineCode","value":"core_dim","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"vH8EA6ZcIy"},{"type":"text","value":" as empty lists.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Lc2QtGZ6rH"}],"key":"w0Z2bVHXqN"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Changing dimension sizes","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"k99m37qM8m"}],"key":"zNeSexpuY4"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Dimensions in ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"ajPOkno1em"},{"type":"inlineCode","value":"resample_dim","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"MoEnhVSwra"},{"type":"text","value":" must upsample or downsample by a factor that implies an integer size in the output data array. For example, in this example we generated tensors of size ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"iGWaPgEfYW"},{"type":"inlineCode","value":"(x=10, y=10)","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"NEjHomBDKk"},{"type":"text","value":" and the model generates tensors of size ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"rLAwDDuCHv"},{"type":"inlineCode","value":"(x=20, y=10)","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"MSzYuv7eae"},{"type":"text","value":". This implies that we are ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"BSPtTEA6Bk"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"upsampling","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"etx9Ck29AF"}],"key":"GE5pHyP03v"},{"type":"text","value":" ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"e3l1YiVYn8"},{"type":"inlineCode","value":"x","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"jEUrimRZaW"},{"type":"text","value":" by a factor of 2. The original data array has size of 50 in the ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"vbT0IOFsv8"},{"type":"inlineCode","value":"x","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"V8W992snQw"},{"type":"text","value":" dimension, and ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"nSSKWIRq3v"},{"type":"inlineCode","value":"50 * 2 = 100","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"SNXQvNKiWY"},{"type":"text","value":" is an integer, so this is allowed.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"pZ9zJlbZIL"}],"key":"MXQZlCncZO"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"What if, for some reason, the batch generator made tensors of size ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"mlcfiPCr4a"},{"type":"inlineCode","value":"(x=7, y=7)","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"mRvIrc79YV"},{"type":"text","value":" and the model generated tensors of size ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"liFgeBePl4"},{"type":"inlineCode","value":"(x=10, y=10)","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"wj29p5g6bH"},{"type":"text","value":"? The resampling factor becomes ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"kEyZfKchi1"},{"type":"inlineCode","value":"10/7","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"DkJM4OhfCx"},{"type":"text","value":", and the implied output data array size is ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ymSQBDi0Ts"},{"type":"inlineCode","value":"(50 * 10/7) = 72.43","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"JLtICD2HaU"},{"type":"text","value":". This is not an integer, so ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"BHYPUepZDe"},{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"owDPb8pQTO"},{"type":"text","value":" will throw an error.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"iOC47TPlxT"}],"key":"YkE0mGEVx0"}],"class":"tip","key":"Wld9vF30UD"}],"key":"FFHenoFIVi"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"map_dataset = MapDataset(bgen)\nreconstructed_da = predict_on_array(\n    dataset=map_dataset,\n    model=model,\n    output_tensor_dim={\"x\": 20, \"y\": 10}, # The model doubles the x-dimension\n    new_dim=[],\n    core_dim=[],\n    resample_dim=[\"x\", \"y\"],\n    batch_size=4\n)\nreconstructed_da","key":"iifmUp8VWo"},{"type":"output","id":"omwHMa-q9Ohafm7xz9hP_","data":[{"output_type":"execute_result","execution_count":10,"metadata":{},"data":{"text/plain":{"content":"<xarray.DataArray (x: 100, y: 40)> Size: 32kB\narray([[0.05824776, 0.99282515, 0.10700098, ..., 0.84982646, 0.32319   ,\n        0.51838797],\n       [0.05824776, 0.99282515, 0.10700098, ..., 0.84982646, 0.32319   ,\n        0.51838797],\n       [0.75242293, 0.80120248, 0.68508363, ..., 0.96481532, 0.23322582,\n        0.02720294],\n       ...,\n       [0.71929884, 0.864815  , 0.1002003 , ..., 0.46891299, 0.40490586,\n        0.68304014],\n       [0.06779575, 0.69567883, 0.35885617, ..., 0.77986789, 0.57126307,\n        0.28037629],\n       [0.06779575, 0.69567883, 0.35885617, ..., 0.77986789, 0.57126307,\n        0.28037629]], shape=(100, 40))\nCoordinates:\n  * x        (x) float64 800B 0.0 0.5 1.0 1.5 2.0 ... 47.5 48.0 48.5 49.0 49.5\n  * y        (y) float64 320B 0.0 1.0 2.0 3.0 4.0 ... 35.0 36.0 37.0 38.0 39.0","content_type":"text/plain"},"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base rgba(0, 0, 0, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, white)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 15))\n  );\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base, rgba(255, 255, 255, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, #111111)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 15))\n  );\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n  border: 2px solid transparent !important;\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0) !important;\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  border-color: var(--xr-background-color-row-odd);\n  margin-bottom: 0;\n  padding-top: 2px;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n  border-color: var(--xr-background-color-row-even);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  border-top: 2px dotted var(--xr-background-color);\n  padding-bottom: 20px !important;\n  padding-top: 10px !important;\n}\n\n.xr-var-attrs-in + label,\n.xr-var-data-in + label,\n.xr-index-data-in + label {\n  padding: 0 1px;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-data > pre,\n.xr-index-data > pre,\n.xr-var-data > table > tbody > tr {\n  background-color: transparent !important;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n\n.xr-var-attrs-in:checked + label > .xr-icon-file-text2,\n.xr-var-data-in:checked + label > .xr-icon-database,\n.xr-index-data-in:checked + label > .xr-icon-database {\n  color: var(--xr-font-color0);\n  filter: drop-shadow(1px 1px 5px var(--xr-font-color2));\n  stroke-width: 0.8px;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (x: 100, y: 40)&gt; Size: 32kB\narray([[0.05824776, 0.99282515, 0.10700098, ..., 0.84982646, 0.32319   ,\n        0.51838797],\n       [0.05824776, 0.99282515, 0.10700098, ..., 0.84982646, 0.32319   ,\n        0.51838797],\n       [0.75242293, 0.80120248, 0.68508363, ..., 0.96481532, 0.23322582,\n        0.02720294],\n       ...,\n       [0.71929884, 0.864815  , 0.1002003 , ..., 0.46891299, 0.40490586,\n        0.68304014],\n       [0.06779575, 0.69567883, 0.35885617, ..., 0.77986789, 0.57126307,\n        0.28037629],\n       [0.06779575, 0.69567883, 0.35885617, ..., 0.77986789, 0.57126307,\n        0.28037629]], shape=(100, 40))\nCoordinates:\n  * x        (x) float64 800B 0.0 0.5 1.0 1.5 2.0 ... 47.5 48.0 48.5 49.0 49.5\n  * y        (y) float64 320B 0.0 1.0 2.0 3.0 4.0 ... 35.0 36.0 37.0 38.0 39.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>x</span>: 100</li><li><span class='xr-has-index'>y</span>: 40</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-57ecc1b8-a7c2-4d12-ba01-3d3409e5f37c' class='xr-array-in' type='checkbox' checked><label for='section-57ecc1b8-a7c2-4d12-ba01-3d3409e5f37c' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.05825 0.9928 0.107 0.9019 0.9078 ... 0.1854 0.7799 0.5713 0.2804</span></div><div class='xr-array-data'><pre>array([[0.05824776, 0.99282515, 0.10700098, ..., 0.84982646, 0.32319   ,\n        0.51838797],\n       [0.05824776, 0.99282515, 0.10700098, ..., 0.84982646, 0.32319   ,\n        0.51838797],\n       [0.75242293, 0.80120248, 0.68508363, ..., 0.96481532, 0.23322582,\n        0.02720294],\n       ...,\n       [0.71929884, 0.864815  , 0.1002003 , ..., 0.46891299, 0.40490586,\n        0.68304014],\n       [0.06779575, 0.69567883, 0.35885617, ..., 0.77986789, 0.57126307,\n        0.28037629],\n       [0.06779575, 0.69567883, 0.35885617, ..., 0.77986789, 0.57126307,\n        0.28037629]], shape=(100, 40))</pre></div></div></li><li class='xr-section-item'><input id='section-8fc4aa04-fbbd-4507-986e-d94380cb3bb1' class='xr-section-summary-in' type='checkbox'  checked><label for='section-8fc4aa04-fbbd-4507-986e-d94380cb3bb1' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.5 1.0 1.5 ... 48.5 49.0 49.5</div><input id='attrs-82028f28-d756-4022-968a-d7664c0f8900' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-82028f28-d756-4022-968a-d7664c0f8900' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4d6d69a6-ff86-48ad-bc40-a7c89fd4de56' class='xr-var-data-in' type='checkbox'><label for='data-4d6d69a6-ff86-48ad-bc40-a7c89fd4de56' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0. ,  0.5,  1. ,  1.5,  2. ,  2.5,  3. ,  3.5,  4. ,  4.5,  5. ,  5.5,\n        6. ,  6.5,  7. ,  7.5,  8. ,  8.5,  9. ,  9.5, 10. , 10.5, 11. , 11.5,\n       12. , 12.5, 13. , 13.5, 14. , 14.5, 15. , 15.5, 16. , 16.5, 17. , 17.5,\n       18. , 18.5, 19. , 19.5, 20. , 20.5, 21. , 21.5, 22. , 22.5, 23. , 23.5,\n       24. , 24.5, 25. , 25.5, 26. , 26.5, 27. , 27.5, 28. , 28.5, 29. , 29.5,\n       30. , 30.5, 31. , 31.5, 32. , 32.5, 33. , 33.5, 34. , 34.5, 35. , 35.5,\n       36. , 36.5, 37. , 37.5, 38. , 38.5, 39. , 39.5, 40. , 40.5, 41. , 41.5,\n       42. , 42.5, 43. , 43.5, 44. , 44.5, 45. , 45.5, 46. , 46.5, 47. , 47.5,\n       48. , 48.5, 49. , 49.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 1.0 2.0 3.0 ... 37.0 38.0 39.0</div><input id='attrs-59c756eb-f680-4d92-b244-e148b7a1f950' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-59c756eb-f680-4d92-b244-e148b7a1f950' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f8e126ae-f6cf-46e0-a1a2-403c2c5782e6' class='xr-var-data-in' type='checkbox'><label for='data-f8e126ae-f6cf-46e0-a1a2-403c2c5782e6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13.,\n       14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27.,\n       28., 29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39.])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-b71d35cb-79e3-4c6e-940b-87f4c0cc0ea8' class='xr-section-summary-in' type='checkbox'  ><label for='section-b71d35cb-79e3-4c6e-940b-87f4c0cc0ea8' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-14948dff-be8a-4d5b-92bf-5f82ec05beff' class='xr-index-data-in' type='checkbox'/><label for='index-14948dff-be8a-4d5b-92bf-5f82ec05beff' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0.0,  0.5,  1.0,  1.5,  2.0,  2.5,  3.0,  3.5,  4.0,  4.5,  5.0,  5.5,\n        6.0,  6.5,  7.0,  7.5,  8.0,  8.5,  9.0,  9.5, 10.0, 10.5, 11.0, 11.5,\n       12.0, 12.5, 13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5,\n       18.0, 18.5, 19.0, 19.5, 20.0, 20.5, 21.0, 21.5, 22.0, 22.5, 23.0, 23.5,\n       24.0, 24.5, 25.0, 25.5, 26.0, 26.5, 27.0, 27.5, 28.0, 28.5, 29.0, 29.5,\n       30.0, 30.5, 31.0, 31.5, 32.0, 32.5, 33.0, 33.5, 34.0, 34.5, 35.0, 35.5,\n       36.0, 36.5, 37.0, 37.5, 38.0, 38.5, 39.0, 39.5, 40.0, 40.5, 41.0, 41.5,\n       42.0, 42.5, 43.0, 43.5, 44.0, 44.5, 45.0, 45.5, 46.0, 46.5, 47.0, 47.5,\n       48.0, 48.5, 49.0, 49.5],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-4bce2efc-e00f-4d01-8df6-8d6d440a431b' class='xr-index-data-in' type='checkbox'/><label for='index-4bce2efc-e00f-4d01-8df6-8d6d440a431b' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0.0,  1.0,  2.0,  3.0,  4.0,  5.0,  6.0,  7.0,  8.0,  9.0, 10.0, 11.0,\n       12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0,\n       24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0,\n       36.0, 37.0, 38.0, 39.0],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-8e2a5efb-8659-4c0e-adcb-a18153eca154' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-8e2a5efb-8659-4c0e-adcb-a18153eca154' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>","content_type":"text/html"}}}],"key":"YZXWW265KF"}],"key":"CrSutrKmKl"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The reconstructed ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fpiSEoYsXQ"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FPFbHqCOBp"},{"type":"text","value":" has the upsampled ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JwqfRE4d3r"},{"type":"inlineCode","value":"x","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"g3wpQD3z7h"},{"type":"text","value":" dimension. We can compare its shape to the original.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w0JphQ8uD0"}],"key":"OHJq3EwgwE"}],"key":"e6CeRZbPBT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(f\"Original shape: {da.shape}\")\nprint(f\"Reconstructed shape: {reconstructed_da.shape}\")","key":"nYjIMyKuME"},{"type":"output","id":"bfw0qbqgqg9AlH6i26SfU","data":[{"output_type":"stream","name":"stdout","text":"Original shape: (50, 40)\nReconstructed shape: (100, 40)\n"}],"key":"gljvnHqD7k"}],"key":"RjaArWul6V"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The reconstructed array has twice the number of elements in the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SEFCHaBXag"},{"type":"inlineCode","value":"x","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zmnbXZMUMr"},{"type":"text","value":" dimension, as expected. This concludes the demonstration of reconstructing an ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Askxk3z1OM"},{"type":"inlineCode","value":"xarray.Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yCHc6USly1"},{"type":"text","value":" from model outputs using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NuMs1c0k6O"},{"type":"inlineCode","value":"xbatcher","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JNAP6In5BT"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bOd3tSnTnW"}],"key":"CBx5uPj8kk"}],"key":"bV6GIlvs3j"}],"key":"K5thYIJSNe"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Dataloading from Xarray Datasets","url":"/notebooks/xbatcher-dataloading","group":"Xbatcher fundamentals"},"next":{"title":"Infer model on array","url":"/notebooks/inference-testing","group":"Testing model inference"}}},"domain":"http://localhost:3000"}