{"version":2,"kind":"Notebook","sha256":"3a874f00783c4d61cce8c8e5787177b5c792b84d396e973c36a42c13fb12ec20","slug":"notebooks.xbatcher-reconstruction","location":"/notebooks/xbatcher_reconstruction.ipynb","dependencies":[],"frontmatter":{"title":"Reconstructing Xarray Datasets from Model Outputs","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"cookbook-dev","language":"python"},"authors":[{"nameParsed":{"literal":"Keenan Ganz, Nabin Kalauni, and The Project Pythia Community","given":"and The Project Pythia Community","family":"Keenan Ganz","suffix":"Nabin Kalauni"},"name":"Keenan Ganz, Nabin Kalauni, and The Project Pythia Community","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/xbatcher-deep-learning","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/xbatcher-deep-learning/blob/main/notebooks/xbatcher_reconstruction.ipynb","exports":[{"format":"ipynb","filename":"xbatcher_reconstruction.ipynb","url":"/xbatcher-deep-learning/build/xbatcher_reconstruct-727f5ce4eb6e726c908b3ec34845ac03.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This notebook addresses the process of reconstructing an ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"okCGYBF4KQ"},{"type":"inlineCode","value":"xarray.DataArray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZhxDHjV2Nv"},{"type":"text","value":" from the output of a machine learning model. While the previous notebook focused on generating batches from ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"t6bdQJ3R6s"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LisX06iXIi"},{"type":"text","value":" objects, this guide details the reverse process: assembling model outputs back into a coherent, labeled ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DXUAZFtruu"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Zz9TPr33ES"},{"type":"text","value":" object. This is a common requirement in scientific machine learning workflows, where the model output needs to be analyzed in its original spatial or temporal context.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XOVVOfD0pI"}],"key":"ya2L8DHHz8"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We will examine a function that reassembles model outputs, including a detailed look at how an internal API of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oKFqoiXcX7"},{"type":"inlineCode","value":"xbatcher","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SjddZWKoxe"},{"type":"text","value":" can be used to map batch outputs back to their original coordinates.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GXwnQVUMKy"}],"key":"MO889Lt5bE"}],"key":"hpevH0D6Am"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cUFhhxHamI"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"aFDoMYIY9T"}],"key":"FSIpkstcO0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport numpy as np\nimport torch\nimport xbatcher\nfrom xbatcher.loaders.torch import MapDataset\nfrom typing import Literal\n\nfrom dummy_models import ExpandAlongAxis","key":"hG4s0W68rQ"},{"type":"output","id":"GgVWG0_2tOmZtx_uZUpen","data":[],"key":"zosjrPZFh3"}],"key":"AjZnI0DYbl"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Setup: Data, Batches, and a Dummy Model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PObbquM2Da"}],"identifier":"setup-data-batches-and-a-dummy-model","label":"Setup: Data, Batches, and a Dummy Model","html_id":"setup-data-batches-and-a-dummy-model","implicit":true,"key":"QEC8OiWwW6"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We will begin by creating a sample ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nd4yYgWQA6"},{"type":"inlineCode","value":"xarray.DataArray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vKGhs4wdY7"},{"type":"text","value":" and a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CkfpeSL0n7"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"l7j1WVQRqI"},{"type":"text","value":". We will also instantiate a dummy model that transforms the data, simulating a common machine learning scenario where the output dimensions differ from the input dimensions (e.g., super-resolution).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XdPFhG53uZ"}],"key":"AdrrHdBsxZ"}],"key":"FWcj1rSF2B"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"da = xr.DataArray(\n    data=np.random.rand(50, 40).astype(np.float32),\n    dims=(\"x\", \"y\"),\n    coords={\"x\": np.arange(50), \"y\": np.arange(40)},\n)\nda","key":"zohg3bV0lB"},{"type":"output","id":"L2K_qDuQ9OjYBuMKCoRhP","data":[{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/plain":{"content":"<xarray.DataArray (x: 50, y: 40)> Size: 8kB\narray([[0.9320443 , 0.8288885 , 0.06671383, ..., 0.3323933 , 0.80247843,\n        0.92279714],\n       [0.05797319, 0.41402102, 0.7184237 , ..., 0.7690102 , 0.37171164,\n        0.6591897 ],\n       [0.13578482, 0.9214641 , 0.27812725, ..., 0.7356883 , 0.2654542 ,\n        0.57794607],\n       ...,\n       [0.19025688, 0.7349217 , 0.92550457, ..., 0.28692034, 0.35616294,\n        0.82662165],\n       [0.90238404, 0.40829995, 0.21021695, ..., 0.70201826, 0.09148074,\n        0.6645425 ],\n       [0.23114347, 0.8109865 , 0.6076811 , ..., 0.8615681 , 0.6960198 ,\n        0.6708928 ]], shape=(50, 40), dtype=float32)\nCoordinates:\n  * x        (x) int64 400B 0 1 2 3 4 5 6 7 8 9 ... 41 42 43 44 45 46 47 48 49\n  * y        (y) int64 320B 0 1 2 3 4 5 6 7 8 9 ... 31 32 33 34 35 36 37 38 39","content_type":"text/plain"},"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base rgba(0, 0, 0, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, white)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 15))\n  );\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base, rgba(255, 255, 255, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, #111111)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 15))\n  );\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n  border: 2px solid transparent !important;\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0) !important;\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  border-color: var(--xr-background-color-row-odd);\n  margin-bottom: 0;\n  padding-top: 2px;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n  border-color: var(--xr-background-color-row-even);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  border-top: 2px dotted var(--xr-background-color);\n  padding-bottom: 20px !important;\n  padding-top: 10px !important;\n}\n\n.xr-var-attrs-in + label,\n.xr-var-data-in + label,\n.xr-index-data-in + label {\n  padding: 0 1px;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-data > pre,\n.xr-index-data > pre,\n.xr-var-data > table > tbody > tr {\n  background-color: transparent !important;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n\n.xr-var-attrs-in:checked + label > .xr-icon-file-text2,\n.xr-var-data-in:checked + label > .xr-icon-database,\n.xr-index-data-in:checked + label > .xr-icon-database {\n  color: var(--xr-font-color0);\n  filter: drop-shadow(1px 1px 5px var(--xr-font-color2));\n  stroke-width: 0.8px;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (x: 50, y: 40)&gt; Size: 8kB\narray([[0.9320443 , 0.8288885 , 0.06671383, ..., 0.3323933 , 0.80247843,\n        0.92279714],\n       [0.05797319, 0.41402102, 0.7184237 , ..., 0.7690102 , 0.37171164,\n        0.6591897 ],\n       [0.13578482, 0.9214641 , 0.27812725, ..., 0.7356883 , 0.2654542 ,\n        0.57794607],\n       ...,\n       [0.19025688, 0.7349217 , 0.92550457, ..., 0.28692034, 0.35616294,\n        0.82662165],\n       [0.90238404, 0.40829995, 0.21021695, ..., 0.70201826, 0.09148074,\n        0.6645425 ],\n       [0.23114347, 0.8109865 , 0.6076811 , ..., 0.8615681 , 0.6960198 ,\n        0.6708928 ]], shape=(50, 40), dtype=float32)\nCoordinates:\n  * x        (x) int64 400B 0 1 2 3 4 5 6 7 8 9 ... 41 42 43 44 45 46 47 48 49\n  * y        (y) int64 320B 0 1 2 3 4 5 6 7 8 9 ... 31 32 33 34 35 36 37 38 39</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>x</span>: 50</li><li><span class='xr-has-index'>y</span>: 40</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-3474f973-6d3e-4d6c-9c60-4efdbb3b24a4' class='xr-array-in' type='checkbox' checked><label for='section-3474f973-6d3e-4d6c-9c60-4efdbb3b24a4' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.932 0.8289 0.06671 0.5933 0.9319 ... 0.4985 0.8616 0.696 0.6709</span></div><div class='xr-array-data'><pre>array([[0.9320443 , 0.8288885 , 0.06671383, ..., 0.3323933 , 0.80247843,\n        0.92279714],\n       [0.05797319, 0.41402102, 0.7184237 , ..., 0.7690102 , 0.37171164,\n        0.6591897 ],\n       [0.13578482, 0.9214641 , 0.27812725, ..., 0.7356883 , 0.2654542 ,\n        0.57794607],\n       ...,\n       [0.19025688, 0.7349217 , 0.92550457, ..., 0.28692034, 0.35616294,\n        0.82662165],\n       [0.90238404, 0.40829995, 0.21021695, ..., 0.70201826, 0.09148074,\n        0.6645425 ],\n       [0.23114347, 0.8109865 , 0.6076811 , ..., 0.8615681 , 0.6960198 ,\n        0.6708928 ]], shape=(50, 40), dtype=float32)</pre></div></div></li><li class='xr-section-item'><input id='section-88336a61-e6e4-41eb-8bed-38197d52e895' class='xr-section-summary-in' type='checkbox'  checked><label for='section-88336a61-e6e4-41eb-8bed-38197d52e895' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 5 6 ... 44 45 46 47 48 49</div><input id='attrs-28a64756-b43a-473c-817c-e8e47e5ec246' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-28a64756-b43a-473c-817c-e8e47e5ec246' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d5070423-4931-4e5e-b4bd-d5f654423c44' class='xr-var-data-in' type='checkbox'><label for='data-d5070423-4931-4e5e-b4bd-d5f654423c44' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 5 6 ... 34 35 36 37 38 39</div><input id='attrs-46f97c6f-c514-4f72-a661-96affd84051a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-46f97c6f-c514-4f72-a661-96affd84051a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-83a34091-5020-434f-89ce-c23aafbde916' class='xr-var-data-in' type='checkbox'><label for='data-83a34091-5020-434f-89ce-c23aafbde916' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-3f87f224-a238-4e8b-b306-82a8934f15b7' class='xr-section-summary-in' type='checkbox'  ><label for='section-3f87f224-a238-4e8b-b306-82a8934f15b7' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-1cca1a52-63db-4f12-9101-ca22bfcd75ac' class='xr-index-data-in' type='checkbox'/><label for='index-1cca1a52-63db-4f12-9101-ca22bfcd75ac' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49],\n      dtype=&#x27;int64&#x27;, name=&#x27;x&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-dbc2afcb-3a29-4a84-8ace-3f1d3eef96a9' class='xr-index-data-in' type='checkbox'/><label for='index-dbc2afcb-3a29-4a84-8ace-3f1d3eef96a9' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n       36, 37, 38, 39],\n      dtype=&#x27;int64&#x27;, name=&#x27;y&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-e197508a-f39c-45e3-8492-718cb2f8caa0' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-e197508a-f39c-45e3-8492-718cb2f8caa0' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>","content_type":"text/html"}}}],"key":"KdFl0Mkv0r"}],"key":"jjmOzafzU8"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Next, we create the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"reDBEYe5ZK"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fUeLCochht"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"K87jVUpV0G"}],"key":"VSG2mg2OmS"}],"key":"VFPamX8hON"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bgen = xbatcher.BatchGenerator(da, input_dims={\"x\": 10, \"y\": 10})","key":"OuPUY6bJ0q"},{"type":"output","id":"Dqe0DH8tTvri3aRe8LCfT","data":[],"key":"RaSWBOv227"}],"key":"iXPdQ6QoX8"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For the model, we will use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nzXDQteeMW"},{"type":"inlineCode","value":"ExpandAlongAxis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IEDeWeAfQd"},{"type":"text","value":" from ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"E5bS98GOCL"},{"type":"inlineCode","value":"dummy_models.py","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"phaXRwk1LH"},{"type":"text","value":". This model upsamples the input along a specified axis, changing the dimensions of the data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yLiyhNiFvM"}],"key":"pQF9MuQLep"}],"key":"PYKVLJwWS9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# The model will expand the 'x' dimension by a factor of 2\nmodel = ExpandAlongAxis(ax=1, n_repeats=2)","key":"iNVDoRMR5u"},{"type":"output","id":"raQs1ClBV0Z19jGMdr3yU","data":[],"key":"jbZwOlPEYi"}],"key":"Y8FAJOJy2n"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RDFTVDNNuB"},{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"x0ypLW0Hn4"},{"type":"text","value":" Function","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CPFnISZEsK"}],"identifier":"the-predict-on-array-function","label":"The predict_on_array Function","html_id":"the-predict-on-array-function","implicit":true,"key":"v146PFv4TA"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LvU7wGUpwH"},{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sCqiTgdZMi"},{"type":"text","value":" function (from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OpUWsbyAee"},{"type":"inlineCode","value":"functions.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wqNDodrTSV"},{"type":"text","value":") is designed to take batches from a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"y2gIOAFHt6"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LwlAmFd3gx"},{"type":"text","value":", pass them through a model, and reassemble the outputs. The following sections will break down this function and its helpers.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XPDyYSEb9d"}],"key":"IsWMkIiCZr"}],"key":"NJLK1bkxPo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _get_resample_factor(\n    bgen: xbatcher.BatchGenerator,\n    output_tensor_dim: dict[str, int],\n    resample_dim: list[str]\n):\n    resample_factor = {}\n    for dim in resample_dim:\n        r = output_tensor_dim[dim] / bgen.input_dims[dim]\n        is_int = (r == int(r))\n        is_inv_int = (1/r == int(1/r)) if r != 0 else False\n        assert is_int or is_inv_int, f\"Resample ratio for dim '{dim}' must be an integer or its inverse.\"\n        resample_factor[dim] = r\n\n    return resample_factor","key":"Sik9UJNkYh"},{"type":"output","id":"1ogWPMl2PQcjmuPoLoyml","data":[],"key":"fk2yi2GO5b"}],"key":"Iaa3dVBw0R"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_get_resample_factor","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T00WBPDUgB"}],"identifier":"id-get-resample-factor","label":"_get_resample_factor","html_id":"id-get-resample-factor","implicit":true,"key":"j8bDHBJfAO"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This helper function calculates the resampling factor for each dimension. For example, if input batches have ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XVZKquBHXb"},{"type":"inlineCode","value":"x=10","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"J7n1NASXyU"},{"type":"text","value":" and the model outputs tensors with ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"M5RAXBHzzR"},{"type":"inlineCode","value":"x=20","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Z6qSBVu6xd"},{"type":"text","value":", the resampling factor for ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BPenE7qgf6"},{"type":"inlineCode","value":"x","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LbaxetK5Ir"},{"type":"text","value":" is 2. This is used to determine the dimensions of the final reconstructed array.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cfkuLm1CdG"}],"key":"YoZ5iAEnmo"}],"key":"jecHhB2VRb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _get_output_array_size(\n    bgen: xbatcher.BatchGenerator,\n    output_tensor_dim: dict[str, int],\n    new_dim: list[str],\n    core_dim: list[str],\n    resample_dim: list[str]\n):\n    resample_factor = _get_resample_factor(bgen, output_tensor_dim, resample_dim)\n    output_size = {}\n    for key, size in output_tensor_dim.items():\n        if key in new_dim:\n            output_size[key] = output_tensor_dim[key]\n        elif key in core_dim:\n            if output_tensor_dim[key] != bgen.ds.sizes[key]:\n                raise ValueError(\n                    f\"Axis {key} is a core dim, but the tensor size\"\n                    f\"({output_tensor_dim[key]}) does not equal the \"\n                    f\"source data array size ({bgen.ds.sizes[key]}).\"\n                )\n            output_size[key] = bgen.ds.sizes[key]\n        elif key in resample_dim:\n            temp_output_size = bgen.ds.sizes[key] * resample_factor[key]\n            assert temp_output_size.is_integer(), f\"Resampling for dim '{key}' results in non-integer size.\"\n            output_size[key] = int(temp_output_size)\n        else:\n            raise ValueError(f\"Axis {key} must be specified in one of new_dim, core_dim, or resample_dim\") \n    return output_size","key":"ZfGvaC9AUB"},{"type":"output","id":"QHeq3fNW-O_w8B-E_FAfv","data":[],"key":"MS4J6w3QzA"}],"key":"MAVl5DjFZr"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_get_output_array_size","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zRdsEgtruD"}],"identifier":"id-get-output-array-size","label":"_get_output_array_size","html_id":"id-get-output-array-size","implicit":true,"key":"nTHIq1LAEu"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This function determines the final size of the reconstructed array. It uses the resampling factor and also considers ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lODMtxi9dx"},{"type":"inlineCode","value":"new_dim","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HcbPFPNd34"},{"type":"text","value":" (dimensions that are new in the output) and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lgUmvcE9TO"},{"type":"inlineCode","value":"core_dim","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"z1SMwl3M3m"},{"type":"text","value":" (dimensions that are not batched over and remain unchanged).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zCUyF9TUt9"}],"key":"V77mJkw4hQ"}],"key":"koPk9zeKR0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _resample_coordinate(\n    coord: xr.DataArray,\n    factor: float,\n    mode: Literal[\"centers\", \"edges\"]=\"edges\"\n) -> np.ndarray:\n    assert len(coord.shape) == 1 and coord.shape[0] > 1\n    assert (coord.shape[0] * factor).is_integer()\n    old_step = (coord.data[1] - coord.data[0])\n    offset = 0 if mode == \"edges\" else old_step / 2\n    new_step = old_step / factor\n    coord = coord - offset\n    new_coord_end = coord.max().item() + old_step\n    return np.arange(coord.min().item(), new_coord_end, step=new_step) + offset","key":"JObAPbmvw4"},{"type":"output","id":"XTHYqfOyPe-JO6jwDgrtn","data":[],"key":"Z23ym456Zz"}],"key":"MXudLxstBi"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_resample_coordinate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KjSk8GP204"}],"identifier":"id-resample-coordinate","label":"_resample_coordinate","html_id":"id-resample-coordinate","implicit":true,"key":"DWDYYIsJdo"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If the size of a dimension is changed, its coordinates must also be updated. This function handles the resampling of coordinates.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vhw8BzzQMc"}],"key":"rqXgMNwjZS"}],"key":"FJktQlXp49"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def _get_output_array_coordinates(\n    src_da: xr.DataArray,\n    output_array_dim: list[str],\n    resample_factor: dict[str, int],\n    resample_mode: Literal[\"centers\", \"edges\"]=\"edges\"\n) -> dict[str, np.ndarray]:\n    output_coords = {}\n    for dim in output_array_dim:\n        if dim in src_da.coords and dim in resample_factor:\n            output_coords[dim] = _resample_coordinate(src_da[dim], resample_factor[dim], resample_mode)\n        elif dim in src_da.coords:\n            output_coords[dim] = src_da[dim].copy(deep=True).data\n        else:\n            continue\n    return output_coords","key":"B0zt8BTNKj"},{"type":"output","id":"YO2TcUb4q-Rga6D0_59Jj","data":[],"key":"xxiz4XziB3"}],"key":"uPCuFx197N"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"_get_output_array_coordinates","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uokbzqK5Qq"}],"identifier":"id-get-output-array-coordinates","label":"_get_output_array_coordinates","html_id":"id-get-output-array-coordinates","implicit":true,"key":"PzgztCRnAt"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This function generates a dictionary of the new coordinates for the output array.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OrCehAUZGA"}],"key":"EhNUAEk3sZ"}],"key":"UTl0vjU92v"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def predict_on_array(\n    dataset: MapDataset,\n    model: torch.nn.Module,\n    output_tensor_dim: dict[str, int],\n    new_dim: list[str],\n    core_dim: list[str],\n    resample_dim: list[str],\n    resample_mode: Literal[\"centers\", \"edges\"]=\"edges\",\n    batch_size: int=16\n) -> xr.DataArray:\n    s_new = set(new_dim)\n    s_core = set(core_dim)\n    s_resample = set(resample_dim)\n\n    if s_new & s_core or s_new & s_resample or s_core & s_resample:\n        raise ValueError(\"new_dim, core_dim, and resample_dim must be disjoint sets.\")\n\n    bgen = dataset.X_generator\n\n    resample_factor = _get_resample_factor(\n        bgen,\n        output_tensor_dim, \n        resample_dim\n    )\n    \n    output_size = _get_output_array_size(\n        bgen,\n        output_tensor_dim,\n        new_dim,\n        core_dim,\n        resample_dim\n    )\n            \n    output_da = xr.DataArray(\n        data=np.zeros(tuple(output_size.values())),\n        dims=tuple(output_size.keys()),\n    )\n    output_n = xr.full_like(output_da, 0)\n    \n    loader = torch.utils.data.DataLoader(dataset, batch_size=batch_size)\n\n    for i, batch in enumerate(loader):\n        input_tensor = batch[0] if isinstance(batch, (list, tuple)) else batch\n        out_batch = model(input_tensor).detach().numpy()\n\n        for ib in range(out_batch.shape[0]):\n            global_index = (i * batch_size) + ib\n            old_indexer = bgen._batch_selectors.selectors[global_index][0]\n            new_indexer = {}\n            for key in old_indexer:\n                if key in resample_dim:\n                    new_indexer[key] = slice(\n                        int(old_indexer[key].start * resample_factor[key]),\n                        int(old_indexer[key].stop * resample_factor[key])\n                    )\n\n            output_da.loc[new_indexer] += out_batch[ib, ...]\n            output_n.loc[new_indexer] += 1\n\n    output_da = output_da / output_n\n\n    output_da = output_da.assign_coords(\n        _get_output_array_coordinates(\n            dataset.X_generator.ds, \n            list(output_tensor_dim.keys()), \n            resample_factor, \n            resample_mode\n        )\n    )\n\n    return output_da","key":"uJTDJXYqPy"},{"type":"output","id":"vfsii4hQWT_YPoztTpunc","data":[],"key":"rcjP4SYyOd"}],"key":"btPsZLj7Tc"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w3RoNsCx24"},{"type":"text","value":" Internals","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rMrQ14LFvq"}],"identifier":"predict-on-array-internals","label":"predict_on_array Internals","html_id":"predict-on-array-internals","implicit":true,"key":"cFRXi7f4Z9"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The key steps of this function are as follows:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NsiiK3ki9e"}],"key":"IVSgwqcXgB"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Initialization","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Wb8dKWijGM"}],"key":"BAqPN3kMRz"},{"type":"text","value":": An empty ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"vgoQOuxBS0"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"T8GKyXBjra"},{"type":"text","value":" (","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"zHr3dVJR8c"},{"type":"inlineCode","value":"output_da","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dDS2IKfzQW"},{"type":"text","value":") is created with the final dimensions, along with a corresponding ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MOEDFMqoMi"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"KydgdCgrWx"},{"type":"text","value":" (","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"N2O5fAquBX"},{"type":"inlineCode","value":"output_n","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MEeFoTyWQB"},{"type":"text","value":") to track the number of predictions for each element (for averaging in case of overlaps).","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pf69pRqVYa"}],"key":"TPZxDDqKQe"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Iteration","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"wIUUUELFDW"}],"key":"b5oA8Z6Mb8"},{"type":"text","value":": The function iterates through the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"OR2iwvPhcz"},{"type":"inlineCode","value":"DataLoader","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"i2DirZI2OW"},{"type":"text","value":".","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"FRwHny8wRN"}],"key":"VHLf2FS4Cq"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The Internal API","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"YbAp2owKXn"}],"key":"qrrPp0ZdbW"},{"type":"text","value":": The core of the reconstruction is ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"jojGklvwdK"},{"type":"inlineCode","value":"bgen._batch_selectors.selectors[global_index]","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bJKsLp8BbV"},{"type":"text","value":". This internal attribute of the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Nt827oy3Dy"},{"type":"inlineCode","value":"BatchGenerator","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ZsC9889YL1"},{"type":"text","value":" stores the slice objects for each batch, providing a map from the batch to the original ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"hMaYsIXJLS"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ttzMlVHDCe"},{"type":"text","value":"’s coordinate space.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"So4N8tCyMp"}],"key":"YYQDVjBowJ"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Disclaimer","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"lwGmtxdAdj"}],"key":"jyqTFgNyYj"},{"type":"text","value":": Accessing internal attributes such as ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"oRL9PJvBPu"},{"type":"inlineCode","value":"_batch_selectors","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"WRSoR9FI4G"},{"type":"text","value":" is not part of the public API and may change in future versions of ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"X3DllukI9Q"},{"type":"inlineCode","value":"xbatcher","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Q8qSgxSykB"},{"type":"text","value":".","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"hilyOPese3"}],"key":"forpIv4ltb"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Rescaling and Placing","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Vm5iZwLxjl"}],"key":"G0PMutxdxr"},{"type":"text","value":": The resampling factor is used to scale the slices, and ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"HJqr8tFdD3"},{"type":"inlineCode","value":".loc","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"uIdw7R59Jz"},{"type":"text","value":" is used to place the model’s output into the correct location in ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Walm4Tq1hu"},{"type":"inlineCode","value":"output_da","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"U5Y4ZA5V0g"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ZciUx0bAth"}],"key":"Amzlml7gJS"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Averaging and Coordinates","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"w4ywRnV1Fw"}],"key":"X9XTaRybbo"},{"type":"text","value":": Finally, the predictions are averaged (if there were overlaps) and the new coordinates are assigned.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"vI9r3du5AH"}],"key":"wg76jsY6PW"}],"key":"XHP4ZDhfzK"}],"key":"heBrXfpyfl"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reconstructing the Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iRB3ZGNfYS"}],"identifier":"reconstructing-the-dataset","label":"Reconstructing the Dataset","html_id":"reconstructing-the-dataset","implicit":true,"key":"DnLdDOIToS"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We will now use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gcbp4Bs9eZ"},{"type":"inlineCode","value":"predict_on_array","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UPfQqnHH8o"},{"type":"text","value":" function to reconstruct the dataset.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pdEextNxFL"}],"key":"GrnBlLswwF"}],"key":"Bi99LlCuGk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"map_dataset = MapDataset(bgen)\nreconstructed_da = predict_on_array(\n    dataset=map_dataset,\n    model=model,\n    output_tensor_dim={\"x\": 20, \"y\": 10}, # The model doubles the x-dimension\n    new_dim=[],\n    core_dim=[],\n    resample_dim=[\"x\", \"y\"],\n    batch_size=4\n)\nreconstructed_da","key":"vSxW6G8uO9"},{"type":"output","id":"Yn5zHgFu07evbWLsMXr5A","data":[{"output_type":"execute_result","execution_count":10,"metadata":{},"data":{"text/plain":{"content":"<xarray.DataArray (x: 100, y: 40)> Size: 32kB\narray([[0.93204433, 0.82888848, 0.06671383, ..., 0.33239329, 0.80247843,\n        0.92279714],\n       [0.93204433, 0.82888848, 0.06671383, ..., 0.33239329, 0.80247843,\n        0.92279714],\n       [0.05797319, 0.41402102, 0.71842372, ..., 0.76901019, 0.37171164,\n        0.6591897 ],\n       ...,\n       [0.90238404, 0.40829995, 0.21021695, ..., 0.70201826, 0.09148074,\n        0.6645425 ],\n       [0.23114347, 0.81098652, 0.6076811 , ..., 0.86156809, 0.69601983,\n        0.67089278],\n       [0.23114347, 0.81098652, 0.6076811 , ..., 0.86156809, 0.69601983,\n        0.67089278]], shape=(100, 40))\nCoordinates:\n  * x        (x) float64 800B 0.0 0.5 1.0 1.5 2.0 ... 47.5 48.0 48.5 49.0 49.5\n  * y        (y) float64 320B 0.0 1.0 2.0 3.0 4.0 ... 35.0 36.0 37.0 38.0 39.0","content_type":"text/plain"},"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base rgba(0, 0, 0, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(0, 0, 0, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, white)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, white) h s calc(l - 15))\n  );\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: var(\n    --jp-content-font-color0,\n    var(--pst-color-text-base, rgba(255, 255, 255, 1))\n  );\n  --xr-font-color2: var(\n    --jp-content-font-color2,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.54))\n  );\n  --xr-font-color3: var(\n    --jp-content-font-color3,\n    var(--pst-color-text-base, rgba(255, 255, 255, 0.38))\n  );\n  --xr-border-color: var(\n    --jp-border-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 10))\n  );\n  --xr-disabled-color: var(\n    --jp-layout-color3,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 40))\n  );\n  --xr-background-color: var(\n    --jp-layout-color0,\n    var(--pst-color-on-background, #111111)\n  );\n  --xr-background-color-row-even: var(\n    --jp-layout-color1,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 5))\n  );\n  --xr-background-color-row-odd: var(\n    --jp-layout-color2,\n    hsl(from var(--pst-color-on-background, #111111) h s calc(l + 15))\n  );\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n  border: 2px solid transparent !important;\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0) !important;\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  border-color: var(--xr-background-color-row-odd);\n  margin-bottom: 0;\n  padding-top: 2px;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n  border-color: var(--xr-background-color-row-even);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  border-top: 2px dotted var(--xr-background-color);\n  padding-bottom: 20px !important;\n  padding-top: 10px !important;\n}\n\n.xr-var-attrs-in + label,\n.xr-var-data-in + label,\n.xr-index-data-in + label {\n  padding: 0 1px;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-data > pre,\n.xr-index-data > pre,\n.xr-var-data > table > tbody > tr {\n  background-color: transparent !important;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n\n.xr-var-attrs-in:checked + label > .xr-icon-file-text2,\n.xr-var-data-in:checked + label > .xr-icon-database,\n.xr-index-data-in:checked + label > .xr-icon-database {\n  color: var(--xr-font-color0);\n  filter: drop-shadow(1px 1px 5px var(--xr-font-color2));\n  stroke-width: 0.8px;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (x: 100, y: 40)&gt; Size: 32kB\narray([[0.93204433, 0.82888848, 0.06671383, ..., 0.33239329, 0.80247843,\n        0.92279714],\n       [0.93204433, 0.82888848, 0.06671383, ..., 0.33239329, 0.80247843,\n        0.92279714],\n       [0.05797319, 0.41402102, 0.71842372, ..., 0.76901019, 0.37171164,\n        0.6591897 ],\n       ...,\n       [0.90238404, 0.40829995, 0.21021695, ..., 0.70201826, 0.09148074,\n        0.6645425 ],\n       [0.23114347, 0.81098652, 0.6076811 , ..., 0.86156809, 0.69601983,\n        0.67089278],\n       [0.23114347, 0.81098652, 0.6076811 , ..., 0.86156809, 0.69601983,\n        0.67089278]], shape=(100, 40))\nCoordinates:\n  * x        (x) float64 800B 0.0 0.5 1.0 1.5 2.0 ... 47.5 48.0 48.5 49.0 49.5\n  * y        (y) float64 320B 0.0 1.0 2.0 3.0 4.0 ... 35.0 36.0 37.0 38.0 39.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>x</span>: 100</li><li><span class='xr-has-index'>y</span>: 40</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-73f0cda3-5ba9-4c95-af88-ca6252f2068b' class='xr-array-in' type='checkbox' checked><label for='section-73f0cda3-5ba9-4c95-af88-ca6252f2068b' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.932 0.8289 0.06671 0.5933 0.9319 ... 0.4985 0.8616 0.696 0.6709</span></div><div class='xr-array-data'><pre>array([[0.93204433, 0.82888848, 0.06671383, ..., 0.33239329, 0.80247843,\n        0.92279714],\n       [0.93204433, 0.82888848, 0.06671383, ..., 0.33239329, 0.80247843,\n        0.92279714],\n       [0.05797319, 0.41402102, 0.71842372, ..., 0.76901019, 0.37171164,\n        0.6591897 ],\n       ...,\n       [0.90238404, 0.40829995, 0.21021695, ..., 0.70201826, 0.09148074,\n        0.6645425 ],\n       [0.23114347, 0.81098652, 0.6076811 , ..., 0.86156809, 0.69601983,\n        0.67089278],\n       [0.23114347, 0.81098652, 0.6076811 , ..., 0.86156809, 0.69601983,\n        0.67089278]], shape=(100, 40))</pre></div></div></li><li class='xr-section-item'><input id='section-edda5692-84e5-4b93-8a6f-29ba9b3302ea' class='xr-section-summary-in' type='checkbox'  checked><label for='section-edda5692-84e5-4b93-8a6f-29ba9b3302ea' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.5 1.0 1.5 ... 48.5 49.0 49.5</div><input id='attrs-57201931-e874-4207-8256-3d96c66c5761' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-57201931-e874-4207-8256-3d96c66c5761' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d1673181-19db-4451-aa93-8a7b3181e201' class='xr-var-data-in' type='checkbox'><label for='data-d1673181-19db-4451-aa93-8a7b3181e201' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0. ,  0.5,  1. ,  1.5,  2. ,  2.5,  3. ,  3.5,  4. ,  4.5,  5. ,  5.5,\n        6. ,  6.5,  7. ,  7.5,  8. ,  8.5,  9. ,  9.5, 10. , 10.5, 11. , 11.5,\n       12. , 12.5, 13. , 13.5, 14. , 14.5, 15. , 15.5, 16. , 16.5, 17. , 17.5,\n       18. , 18.5, 19. , 19.5, 20. , 20.5, 21. , 21.5, 22. , 22.5, 23. , 23.5,\n       24. , 24.5, 25. , 25.5, 26. , 26.5, 27. , 27.5, 28. , 28.5, 29. , 29.5,\n       30. , 30.5, 31. , 31.5, 32. , 32.5, 33. , 33.5, 34. , 34.5, 35. , 35.5,\n       36. , 36.5, 37. , 37.5, 38. , 38.5, 39. , 39.5, 40. , 40.5, 41. , 41.5,\n       42. , 42.5, 43. , 43.5, 44. , 44.5, 45. , 45.5, 46. , 46.5, 47. , 47.5,\n       48. , 48.5, 49. , 49.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 1.0 2.0 3.0 ... 37.0 38.0 39.0</div><input id='attrs-39328160-6673-4f3c-a304-bdf3ebaac788' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-39328160-6673-4f3c-a304-bdf3ebaac788' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-26a9149e-7f7c-48b1-8860-90b313f5af82' class='xr-var-data-in' type='checkbox'><label for='data-26a9149e-7f7c-48b1-8860-90b313f5af82' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13.,\n       14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27.,\n       28., 29., 30., 31., 32., 33., 34., 35., 36., 37., 38., 39.])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-49fa4583-b2ca-47bb-bb7b-9847e33af77b' class='xr-section-summary-in' type='checkbox'  ><label for='section-49fa4583-b2ca-47bb-bb7b-9847e33af77b' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-0aadf0a3-ba0c-48fe-bc17-75d3c4a4e728' class='xr-index-data-in' type='checkbox'/><label for='index-0aadf0a3-ba0c-48fe-bc17-75d3c4a4e728' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0.0,  0.5,  1.0,  1.5,  2.0,  2.5,  3.0,  3.5,  4.0,  4.5,  5.0,  5.5,\n        6.0,  6.5,  7.0,  7.5,  8.0,  8.5,  9.0,  9.5, 10.0, 10.5, 11.0, 11.5,\n       12.0, 12.5, 13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5,\n       18.0, 18.5, 19.0, 19.5, 20.0, 20.5, 21.0, 21.5, 22.0, 22.5, 23.0, 23.5,\n       24.0, 24.5, 25.0, 25.5, 26.0, 26.5, 27.0, 27.5, 28.0, 28.5, 29.0, 29.5,\n       30.0, 30.5, 31.0, 31.5, 32.0, 32.5, 33.0, 33.5, 34.0, 34.5, 35.0, 35.5,\n       36.0, 36.5, 37.0, 37.5, 38.0, 38.5, 39.0, 39.5, 40.0, 40.5, 41.0, 41.5,\n       42.0, 42.5, 43.0, 43.5, 44.0, 44.5, 45.0, 45.5, 46.0, 46.5, 47.0, 47.5,\n       48.0, 48.5, 49.0, 49.5],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-21443b51-abf8-4a9c-8568-f4921b617855' class='xr-index-data-in' type='checkbox'/><label for='index-21443b51-abf8-4a9c-8568-f4921b617855' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0.0,  1.0,  2.0,  3.0,  4.0,  5.0,  6.0,  7.0,  8.0,  9.0, 10.0, 11.0,\n       12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0,\n       24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0,\n       36.0, 37.0, 38.0, 39.0],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-bd884448-49d0-4968-9237-102e7a4b8c1b' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-bd884448-49d0-4968-9237-102e7a4b8c1b' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>","content_type":"text/html"}}}],"key":"QKvEUhcsea"}],"key":"S8E80IZHPU"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The reconstructed ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pjrVNkrYtI"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YR0KS7mpBl"},{"type":"text","value":" has the upsampled ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FYIamkqlBD"},{"type":"inlineCode","value":"x","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WHrNd1t1o5"},{"type":"text","value":" dimension. We can compare its shape to the original.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dDXPFQolNC"}],"key":"jM0VNJSNqX"}],"key":"l9WXm4Y9mA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(f\"Original shape: {da.shape}\")\nprint(f\"Reconstructed shape: {reconstructed_da.shape}\")","key":"VR4EtpE7qj"},{"type":"output","id":"mzrRAx12MiNQ_C6PL9Giz","data":[{"output_type":"stream","name":"stdout","text":"Original shape: (50, 40)\nReconstructed shape: (100, 40)\n"}],"key":"ZYy3R141xy"}],"key":"jceX8Xq7dP"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The reconstructed array has twice the number of elements in the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NMGgyKWYBf"},{"type":"inlineCode","value":"x","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fk5cJ4CeBK"},{"type":"text","value":" dimension, as expected. This concludes the demonstration of reconstructing an ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"A7ULEiN6zI"},{"type":"inlineCode","value":"xarray.Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cD7P6SB8O3"},{"type":"text","value":" from model outputs using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jpzjxDXrdE"},{"type":"inlineCode","value":"xbatcher","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OuSisByKWg"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cHDxf6Yim9"}],"key":"xdAOEU7Tf2"}],"key":"mLghQaJWnl"}],"key":"ePclAnqE9A"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Dataloading from Xarray Datasets","url":"/notebooks/xbatcher-dataloading","group":"Xbatcher fundamentals"},"next":{"title":"Infer model on array","url":"/notebooks/inference-testing","group":"Testing model inference"}}},"domain":"http://localhost:3000"}